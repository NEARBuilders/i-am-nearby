"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@here-wallet";
exports.ids = ["vendor-chunks/@here-wallet"];
exports.modules = {

/***/ "(ssr)/./node_modules/@here-wallet/core/build/HereKeyStore.js":
/*!**************************************************************!*\
  !*** ./node_modules/@here-wallet/core/build/HereKeyStore.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.HereKeyStore = void 0;\nconst key_pair_1 = __webpack_require__(/*! near-api-js/lib/utils/key_pair */ \"(ssr)/./node_modules/near-api-js/lib/utils/key_pair.js\");\nconst JSONStorage_1 = __webpack_require__(/*! ./JSONStorage */ \"(ssr)/./node_modules/@here-wallet/core/build/JSONStorage.js\");\nclass HereKeyStore {\n    constructor(storage = new JSONStorage_1.StateStorage()){\n        this.storage = storage;\n    }\n    setActiveAccount(network, id) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const state = yield this.storage.getState(network);\n            state.activeAccount = id;\n            this.storage.setState(network, state);\n        });\n    }\n    setKey(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const state = yield this.storage.getState(networkId);\n            state.accounts[accountId] = keyPair.toString();\n            this.storage.setState(networkId, state);\n        });\n    }\n    getAccounts(network) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const state = yield this.storage.getState(network);\n            return Object.keys(state.accounts);\n        });\n    }\n    getActiveAccount(network) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const state = yield this.storage.getState(network);\n            return state.activeAccount;\n        });\n    }\n    getKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const state = yield this.storage.getState(networkId);\n            const privateKey = state.accounts[accountId];\n            if (privateKey == null) throw Error(`For ${accountId} in ${networkId} network key not found`);\n            const keyPair = key_pair_1.KeyPair.fromString(privateKey);\n            return keyPair;\n        });\n    }\n    removeKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function*() {\n            let state = yield this.storage.getState(networkId);\n            if (state.activeAccount === accountId) {\n                state.activeAccount = null;\n            }\n            delete state.accounts[accountId];\n            this.storage.setState(networkId, state);\n        });\n    }\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function*() {\n            let state = yield this.storage.getFullState();\n            return Object.keys(state.accounts);\n        });\n    }\n    clear() {\n        return __awaiter(this, void 0, void 0, function*() {\n            yield this.storage.clear();\n        });\n    }\n}\nexports.HereKeyStore = HereKeyStore; //# sourceMappingURL=HereKeyStore.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@here-wallet/core/build/HereKeyStore.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@here-wallet/core/build/JSONStorage.js":
/*!*************************************************************!*\
  !*** ./node_modules/@here-wallet/core/build/JSONStorage.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\nvar __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.StateStorage = void 0;\nclass StateStorage {\n    constructor(){\n        this.dataKey = `herewallet:keystore`;\n    }\n    setState(network, state) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const data = yield this.getFullState();\n            data[network] = state;\n            window.localStorage.setItem(this.dataKey, JSON.stringify(data));\n        });\n    }\n    getFullState() {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                return JSON.parse(window.localStorage.getItem(this.dataKey)) || {};\n            } catch (_a) {\n                return {};\n            }\n        });\n    }\n    getState(network) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const json = yield this.getFullState();\n            return json[network] || {\n                activeAccount: null,\n                accounts: {}\n            };\n        });\n    }\n    clear() {\n        return __awaiter(this, void 0, void 0, function*() {\n            window.localStorage.removeItem(this.dataKey);\n        });\n    }\n}\nexports.StateStorage = StateStorage; //# sourceMappingURL=JSONStorage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGhlcmUtd2FsbGV0L2NvcmUvYnVpbGQvSlNPTlN0b3JhZ2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxZQUFZLElBQUssSUFBSSxJQUFJLENBQUNBLFNBQVMsSUFBSyxTQUFVQyxPQUFPLEVBQUVDLFVBQVUsRUFBRUMsQ0FBQyxFQUFFQyxTQUFTO0lBQ25GLFNBQVNDLE1BQU1DLEtBQUs7UUFBSSxPQUFPQSxpQkFBaUJILElBQUlHLFFBQVEsSUFBSUgsRUFBRSxTQUFVSSxPQUFPO1lBQUlBLFFBQVFEO1FBQVE7SUFBSTtJQUMzRyxPQUFPLElBQUtILENBQUFBLEtBQU1BLENBQUFBLElBQUlLLE9BQU0sQ0FBQyxFQUFHLFNBQVVELE9BQU8sRUFBRUUsTUFBTTtRQUNyRCxTQUFTQyxVQUFVSixLQUFLO1lBQUksSUFBSTtnQkFBRUssS0FBS1AsVUFBVVEsSUFBSSxDQUFDTjtZQUFTLEVBQUUsT0FBT08sR0FBRztnQkFBRUosT0FBT0k7WUFBSTtRQUFFO1FBQzFGLFNBQVNDLFNBQVNSLEtBQUs7WUFBSSxJQUFJO2dCQUFFSyxLQUFLUCxTQUFTLENBQUMsUUFBUSxDQUFDRTtZQUFTLEVBQUUsT0FBT08sR0FBRztnQkFBRUosT0FBT0k7WUFBSTtRQUFFO1FBQzdGLFNBQVNGLEtBQUtJLE1BQU07WUFBSUEsT0FBT0MsSUFBSSxHQUFHVCxRQUFRUSxPQUFPVCxLQUFLLElBQUlELE1BQU1VLE9BQU9ULEtBQUssRUFBRVcsSUFBSSxDQUFDUCxXQUFXSTtRQUFXO1FBQzdHSCxLQUFLLENBQUNQLFlBQVlBLFVBQVVjLEtBQUssQ0FBQ2pCLFNBQVNDLGNBQWMsRUFBRSxHQUFHVSxJQUFJO0lBQ3RFO0FBQ0o7QUFDQU8sOENBQTZDO0lBQUViLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RlLG9CQUFvQixHQUFHLEtBQUs7QUFDNUIsTUFBTUM7SUFDRkMsYUFBYztRQUNWLElBQUksQ0FBQ0MsT0FBTyxHQUFHLENBQUMsbUJBQW1CLENBQUM7SUFDeEM7SUFDQUMsU0FBU0MsT0FBTyxFQUFFQyxLQUFLLEVBQUU7UUFDckIsT0FBTzNCLFVBQVUsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7WUFDbkMsTUFBTTRCLE9BQU8sTUFBTSxJQUFJLENBQUNDLFlBQVk7WUFDcENELElBQUksQ0FBQ0YsUUFBUSxHQUFHQztZQUNoQkcsT0FBT0MsWUFBWSxDQUFDQyxPQUFPLENBQUMsSUFBSSxDQUFDUixPQUFPLEVBQUVTLEtBQUtDLFNBQVMsQ0FBQ047UUFDN0Q7SUFDSjtJQUNBQyxlQUFlO1FBQ1gsT0FBTzdCLFVBQVUsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7WUFDbkMsSUFBSTtnQkFDQSxPQUFPaUMsS0FBS0UsS0FBSyxDQUFDTCxPQUFPQyxZQUFZLENBQUNLLE9BQU8sQ0FBQyxJQUFJLENBQUNaLE9BQU8sTUFBTSxDQUFDO1lBQ3JFLEVBQ0EsT0FBT2EsSUFBSTtnQkFDUCxPQUFPLENBQUM7WUFDWjtRQUNKO0lBQ0o7SUFDQUMsU0FBU1osT0FBTyxFQUFFO1FBQ2QsT0FBTzFCLFVBQVUsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7WUFDbkMsTUFBTXVDLE9BQU8sTUFBTSxJQUFJLENBQUNWLFlBQVk7WUFDcEMsT0FBT1UsSUFBSSxDQUFDYixRQUFRLElBQUk7Z0JBQUVjLGVBQWU7Z0JBQU1DLFVBQVUsQ0FBQztZQUFFO1FBQ2hFO0lBQ0o7SUFDQUMsUUFBUTtRQUNKLE9BQU8xQyxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1lBQ25DOEIsT0FBT0MsWUFBWSxDQUFDWSxVQUFVLENBQUMsSUFBSSxDQUFDbkIsT0FBTztRQUMvQztJQUNKO0FBQ0o7QUFDQUgsb0JBQW9CLEdBQUdDLGNBQ3ZCLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL2ktYW0tbmVhcmJ5Ly4vbm9kZV9tb2R1bGVzL0BoZXJlLXdhbGxldC9jb3JlL2J1aWxkL0pTT05TdG9yYWdlLmpzPzllNDIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU3RhdGVTdG9yYWdlID0gdm9pZCAwO1xuY2xhc3MgU3RhdGVTdG9yYWdlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5kYXRhS2V5ID0gYGhlcmV3YWxsZXQ6a2V5c3RvcmVgO1xuICAgIH1cbiAgICBzZXRTdGF0ZShuZXR3b3JrLCBzdGF0ZSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3QgZGF0YSA9IHlpZWxkIHRoaXMuZ2V0RnVsbFN0YXRlKCk7XG4gICAgICAgICAgICBkYXRhW25ldHdvcmtdID0gc3RhdGU7XG4gICAgICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0odGhpcy5kYXRhS2V5LCBKU09OLnN0cmluZ2lmeShkYXRhKSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnZXRGdWxsU3RhdGUoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0aGlzLmRhdGFLZXkpKSB8fCB7fTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChfYSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB7fTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGdldFN0YXRlKG5ldHdvcmspIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IGpzb24gPSB5aWVsZCB0aGlzLmdldEZ1bGxTdGF0ZSgpO1xuICAgICAgICAgICAgcmV0dXJuIGpzb25bbmV0d29ya10gfHwgeyBhY3RpdmVBY2NvdW50OiBudWxsLCBhY2NvdW50czoge30gfTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNsZWFyKCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKHRoaXMuZGF0YUtleSk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuU3RhdGVTdG9yYWdlID0gU3RhdGVTdG9yYWdlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SlNPTlN0b3JhZ2UuanMubWFwIl0sIm5hbWVzIjpbIl9fYXdhaXRlciIsInRoaXNBcmciLCJfYXJndW1lbnRzIiwiUCIsImdlbmVyYXRvciIsImFkb3B0IiwidmFsdWUiLCJyZXNvbHZlIiwiUHJvbWlzZSIsInJlamVjdCIsImZ1bGZpbGxlZCIsInN0ZXAiLCJuZXh0IiwiZSIsInJlamVjdGVkIiwicmVzdWx0IiwiZG9uZSIsInRoZW4iLCJhcHBseSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsIlN0YXRlU3RvcmFnZSIsImNvbnN0cnVjdG9yIiwiZGF0YUtleSIsInNldFN0YXRlIiwibmV0d29yayIsInN0YXRlIiwiZGF0YSIsImdldEZ1bGxTdGF0ZSIsIndpbmRvdyIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJKU09OIiwic3RyaW5naWZ5IiwicGFyc2UiLCJnZXRJdGVtIiwiX2EiLCJnZXRTdGF0ZSIsImpzb24iLCJhY3RpdmVBY2NvdW50IiwiYWNjb3VudHMiLCJjbGVhciIsInJlbW92ZUl0ZW0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@here-wallet/core/build/JSONStorage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@here-wallet/core/build/WidgetStrategy.js":
/*!****************************************************************!*\
  !*** ./node_modules/@here-wallet/core/build/WidgetStrategy.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.WidgetStrategy = exports.defaultUrl = void 0;\nconst createIframe = (widget)=>{\n    const connector = document.createElement(\"iframe\");\n    connector.src = widget;\n    connector.style.border = \"none\";\n    connector.style.zIndex = \"10000\";\n    connector.style.position = \"fixed\";\n    connector.style.display = \"none\";\n    connector.style.top = \"0\";\n    connector.style.left = \"0\";\n    connector.style.width = \"100%\";\n    connector.style.height = \"100%\";\n    document.body.appendChild(connector);\n    return connector;\n};\nexports.defaultUrl = \"https://my.herewallet.app/connector/index.html\";\nclass WidgetStrategy {\n    constructor(options = {\n        widget: exports.defaultUrl,\n        lazy: false\n    }){\n        this.options = {\n            lazy: typeof options === \"object\" ? options.lazy || false : false,\n            widget: typeof options === \"string\" ? options : options.widget || exports.defaultUrl\n        };\n        if (!this.options.lazy) {\n            this.initIframe();\n        }\n    }\n    initIframe() {\n        if (WidgetStrategy.connector == null) {\n            WidgetStrategy.connector = createIframe(this.options.widget);\n            WidgetStrategy.connector.addEventListener(\"load\", ()=>{\n                WidgetStrategy.isLoaded = true;\n            });\n        }\n        return WidgetStrategy.connector;\n    }\n    onRequested(id, request, reject) {\n        const iframe = this.initIframe();\n        iframe.style.display = \"block\";\n        const loadHandler = ()=>{\n            var _a, _b, _c;\n            (_a = WidgetStrategy.connector) === null || _a === void 0 ? void 0 : _a.removeEventListener(\"load\", loadHandler);\n            (_c = (_b = WidgetStrategy.connector) === null || _b === void 0 ? void 0 : _b.contentWindow) === null || _c === void 0 ? void 0 : _c.postMessage(JSON.stringify({\n                type: \"request\",\n                payload: {\n                    id,\n                    request\n                }\n            }), new URL(this.options.widget).origin);\n        };\n        if (WidgetStrategy.isLoaded) loadHandler();\n        else iframe.addEventListener(\"load\", loadHandler);\n        this.messageHandler = (event)=>{\n            try {\n                if (event.origin !== new URL(this.options.widget).origin) return;\n                if (JSON.parse(event.data).type === \"reject\") reject();\n            } catch (_a) {}\n        };\n        window.addEventListener(\"message\", this.messageHandler);\n    }\n    postMessage(data) {\n        var _a;\n        const iframe = this.initIframe();\n        const args = JSON.stringify(data);\n        const origin = new URL(this.options.widget).origin;\n        (_a = iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.postMessage(args, origin);\n    }\n    onApproving() {\n        this.postMessage({\n            type: \"approving\"\n        });\n    }\n    onSuccess(request) {\n        console.log(request);\n        this.postMessage({\n            type: \"result\",\n            payload: {\n                request\n            }\n        });\n        this.close();\n    }\n    onFailed(request) {\n        this.postMessage({\n            type: \"result\",\n            payload: {\n                request\n            }\n        });\n        this.close();\n    }\n    close() {\n        if (this.messageHandler) {\n            window.removeEventListener(\"message\", this.messageHandler);\n            this.messageHandler = undefined;\n        }\n        if (WidgetStrategy.connector) {\n            WidgetStrategy.connector.style.display = \"none\";\n        }\n    }\n}\nexports.WidgetStrategy = WidgetStrategy;\nWidgetStrategy.isLoaded = false; //# sourceMappingURL=WidgetStrategy.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@here-wallet/core/build/WidgetStrategy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@here-wallet/core/build/WindowStrategy.js":
/*!****************************************************************!*\
  !*** ./node_modules/@here-wallet/core/build/WindowStrategy.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.WindowStrategy = void 0;\nclass WindowStrategy {\n    constructor(endpoint = \"https://my.herewallet.app\"){\n        this.endpoint = endpoint;\n        this.signWindow = null;\n        this.onFailed = ()=>this.close();\n        this.onSuccess = ()=>this.close();\n    }\n    onInitialized() {\n        if (this.signWindow) return;\n        const left = window.innerWidth / 2 - 420 / 2;\n        const top = window.innerHeight / 2 - 700 / 2;\n        this.signWindow = window.open(`${this.endpoint}/loading`, \"_blank\", `popup=1,width=420,height=700,top=${top},left=${left}`);\n    }\n    onRequested(id, request, reject) {\n        if (this.signWindow == null) return;\n        this.unloadHandler = ()=>{\n            var _a;\n            return (_a = this.signWindow) === null || _a === void 0 ? void 0 : _a.close();\n        };\n        window.addEventListener(\"beforeunload\", this.unloadHandler);\n        this.signWindow.location = `${this.endpoint}/request/${id}`;\n        this.timerHandler = setInterval(()=>{\n            var _a;\n            if ((_a = this.signWindow) === null || _a === void 0 ? void 0 : _a.closed) reject(\"CLOSED\");\n        }, 1000);\n    }\n    close() {\n        var _a;\n        clearInterval(this.timerHandler);\n        (_a = this.signWindow) === null || _a === void 0 ? void 0 : _a.close();\n        this.signWindow = null;\n        if (this.unloadHandler) {\n            window.removeEventListener(\"beforeunload\", this.unloadHandler);\n        }\n    }\n}\nexports.WindowStrategy = WindowStrategy; //# sourceMappingURL=WindowStrategy.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGhlcmUtd2FsbGV0L2NvcmUvYnVpbGQvV2luZG93U3RyYXRlZ3kuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHNCQUFzQixHQUFHLEtBQUs7QUFDOUIsTUFBTUU7SUFDRkMsWUFBWUMsV0FBVywyQkFBMkIsQ0FBRTtRQUNoRCxJQUFJLENBQUNBLFFBQVEsR0FBR0E7UUFDaEIsSUFBSSxDQUFDQyxVQUFVLEdBQUc7UUFDbEIsSUFBSSxDQUFDQyxRQUFRLEdBQUcsSUFBTSxJQUFJLENBQUNDLEtBQUs7UUFDaEMsSUFBSSxDQUFDQyxTQUFTLEdBQUcsSUFBTSxJQUFJLENBQUNELEtBQUs7SUFDckM7SUFDQUUsZ0JBQWdCO1FBQ1osSUFBSSxJQUFJLENBQUNKLFVBQVUsRUFDZjtRQUNKLE1BQU1LLE9BQU9DLE9BQU9DLFVBQVUsR0FBRyxJQUFJLE1BQU07UUFDM0MsTUFBTUMsTUFBTUYsT0FBT0csV0FBVyxHQUFHLElBQUksTUFBTTtRQUMzQyxJQUFJLENBQUNULFVBQVUsR0FBR00sT0FBT0ksSUFBSSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUNYLFFBQVEsQ0FBQyxRQUFRLENBQUMsRUFBRSxVQUFVLENBQUMsaUNBQWlDLEVBQUVTLElBQUksTUFBTSxFQUFFSCxLQUFLLENBQUM7SUFDOUg7SUFDQU0sWUFBWUMsRUFBRSxFQUFFQyxPQUFPLEVBQUVDLE1BQU0sRUFBRTtRQUM3QixJQUFJLElBQUksQ0FBQ2QsVUFBVSxJQUFJLE1BQ25CO1FBQ0osSUFBSSxDQUFDZSxhQUFhLEdBQUc7WUFBUSxJQUFJQztZQUFJLE9BQU8sQ0FBQ0EsS0FBSyxJQUFJLENBQUNoQixVQUFVLE1BQU0sUUFBUWdCLE9BQU8sS0FBSyxJQUFJLEtBQUssSUFBSUEsR0FBR2QsS0FBSztRQUFJO1FBQ3BISSxPQUFPVyxnQkFBZ0IsQ0FBQyxnQkFBZ0IsSUFBSSxDQUFDRixhQUFhO1FBQzFELElBQUksQ0FBQ2YsVUFBVSxDQUFDa0IsUUFBUSxHQUFHLENBQUMsRUFBRSxJQUFJLENBQUNuQixRQUFRLENBQUMsU0FBUyxFQUFFYSxHQUFHLENBQUM7UUFDM0QsSUFBSSxDQUFDTyxZQUFZLEdBQUdDLFlBQVk7WUFDNUIsSUFBSUo7WUFDSixJQUFJLENBQUNBLEtBQUssSUFBSSxDQUFDaEIsVUFBVSxNQUFNLFFBQVFnQixPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUdLLE1BQU0sRUFDckVQLE9BQU87UUFDZixHQUFHO0lBQ1A7SUFDQVosUUFBUTtRQUNKLElBQUljO1FBQ0pNLGNBQWMsSUFBSSxDQUFDSCxZQUFZO1FBQzlCSCxDQUFBQSxLQUFLLElBQUksQ0FBQ2hCLFVBQVUsTUFBTSxRQUFRZ0IsT0FBTyxLQUFLLElBQUksS0FBSyxJQUFJQSxHQUFHZCxLQUFLO1FBQ3BFLElBQUksQ0FBQ0YsVUFBVSxHQUFHO1FBQ2xCLElBQUksSUFBSSxDQUFDZSxhQUFhLEVBQUU7WUFDcEJULE9BQU9pQixtQkFBbUIsQ0FBQyxnQkFBZ0IsSUFBSSxDQUFDUixhQUFhO1FBQ2pFO0lBQ0o7QUFDSjtBQUNBcEIsc0JBQXNCLEdBQUdFLGdCQUN6QiwwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pLWFtLW5lYXJieS8uL25vZGVfbW9kdWxlcy9AaGVyZS13YWxsZXQvY29yZS9idWlsZC9XaW5kb3dTdHJhdGVneS5qcz81MjQ3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5XaW5kb3dTdHJhdGVneSA9IHZvaWQgMDtcbmNsYXNzIFdpbmRvd1N0cmF0ZWd5IHtcbiAgICBjb25zdHJ1Y3RvcihlbmRwb2ludCA9IFwiaHR0cHM6Ly9teS5oZXJld2FsbGV0LmFwcFwiKSB7XG4gICAgICAgIHRoaXMuZW5kcG9pbnQgPSBlbmRwb2ludDtcbiAgICAgICAgdGhpcy5zaWduV2luZG93ID0gbnVsbDtcbiAgICAgICAgdGhpcy5vbkZhaWxlZCA9ICgpID0+IHRoaXMuY2xvc2UoKTtcbiAgICAgICAgdGhpcy5vblN1Y2Nlc3MgPSAoKSA9PiB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICAgIG9uSW5pdGlhbGl6ZWQoKSB7XG4gICAgICAgIGlmICh0aGlzLnNpZ25XaW5kb3cpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNvbnN0IGxlZnQgPSB3aW5kb3cuaW5uZXJXaWR0aCAvIDIgLSA0MjAgLyAyO1xuICAgICAgICBjb25zdCB0b3AgPSB3aW5kb3cuaW5uZXJIZWlnaHQgLyAyIC0gNzAwIC8gMjtcbiAgICAgICAgdGhpcy5zaWduV2luZG93ID0gd2luZG93Lm9wZW4oYCR7dGhpcy5lbmRwb2ludH0vbG9hZGluZ2AsIFwiX2JsYW5rXCIsIGBwb3B1cD0xLHdpZHRoPTQyMCxoZWlnaHQ9NzAwLHRvcD0ke3RvcH0sbGVmdD0ke2xlZnR9YCk7XG4gICAgfVxuICAgIG9uUmVxdWVzdGVkKGlkLCByZXF1ZXN0LCByZWplY3QpIHtcbiAgICAgICAgaWYgKHRoaXMuc2lnbldpbmRvdyA9PSBudWxsKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB0aGlzLnVubG9hZEhhbmRsZXIgPSAoKSA9PiB7IHZhciBfYTsgcmV0dXJuIChfYSA9IHRoaXMuc2lnbldpbmRvdykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNsb3NlKCk7IH07XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwiYmVmb3JldW5sb2FkXCIsIHRoaXMudW5sb2FkSGFuZGxlcik7XG4gICAgICAgIHRoaXMuc2lnbldpbmRvdy5sb2NhdGlvbiA9IGAke3RoaXMuZW5kcG9pbnR9L3JlcXVlc3QvJHtpZH1gO1xuICAgICAgICB0aGlzLnRpbWVySGFuZGxlciA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIGlmICgoX2EgPSB0aGlzLnNpZ25XaW5kb3cpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jbG9zZWQpXG4gICAgICAgICAgICAgICAgcmVqZWN0KFwiQ0xPU0VEXCIpO1xuICAgICAgICB9LCAxMDAwKTtcbiAgICB9XG4gICAgY2xvc2UoKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVySGFuZGxlcik7XG4gICAgICAgIChfYSA9IHRoaXMuc2lnbldpbmRvdykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNsb3NlKCk7XG4gICAgICAgIHRoaXMuc2lnbldpbmRvdyA9IG51bGw7XG4gICAgICAgIGlmICh0aGlzLnVubG9hZEhhbmRsZXIpIHtcbiAgICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwiYmVmb3JldW5sb2FkXCIsIHRoaXMudW5sb2FkSGFuZGxlcik7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLldpbmRvd1N0cmF0ZWd5ID0gV2luZG93U3RyYXRlZ3k7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1XaW5kb3dTdHJhdGVneS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJXaW5kb3dTdHJhdGVneSIsImNvbnN0cnVjdG9yIiwiZW5kcG9pbnQiLCJzaWduV2luZG93Iiwib25GYWlsZWQiLCJjbG9zZSIsIm9uU3VjY2VzcyIsIm9uSW5pdGlhbGl6ZWQiLCJsZWZ0Iiwid2luZG93IiwiaW5uZXJXaWR0aCIsInRvcCIsImlubmVySGVpZ2h0Iiwib3BlbiIsIm9uUmVxdWVzdGVkIiwiaWQiLCJyZXF1ZXN0IiwicmVqZWN0IiwidW5sb2FkSGFuZGxlciIsIl9hIiwiYWRkRXZlbnRMaXN0ZW5lciIsImxvY2F0aW9uIiwidGltZXJIYW5kbGVyIiwic2V0SW50ZXJ2YWwiLCJjbG9zZWQiLCJjbGVhckludGVydmFsIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@here-wallet/core/build/WindowStrategy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@here-wallet/core/build/actions/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@here-wallet/core/build/actions/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.createAction = exports.parseArgs = void 0;\nconst bn_js_1 = __webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/bn.js/lib/bn.js\");\nconst near_api_js_1 = __webpack_require__(/*! near-api-js */ \"(ssr)/./node_modules/near-api-js/lib/index.js\");\nconst getAccessKey = (permission)=>{\n    if (permission === \"FullAccess\") {\n        return near_api_js_1.transactions.fullAccessKey();\n    }\n    const { receiverId, methodNames = [] } = permission;\n    const allowance = permission.allowance ? new bn_js_1.BN(permission.allowance) : undefined;\n    return near_api_js_1.transactions.functionCallAccessKey(receiverId, methodNames, allowance);\n};\nconst parseArgs = (data)=>{\n    if (typeof data === \"string\") return Buffer.from(data, \"base64\");\n    return data;\n};\nexports.parseArgs = parseArgs;\nconst createAction = (action)=>{\n    switch(action.type){\n        case \"CreateAccount\":\n            return near_api_js_1.transactions.createAccount();\n        case \"DeployContract\":\n            {\n                const { code } = action.params;\n                return near_api_js_1.transactions.deployContract(code);\n            }\n        case \"FunctionCall\":\n            {\n                const { methodName, args, gas, deposit } = action.params;\n                return near_api_js_1.transactions.functionCall(methodName, (0, exports.parseArgs)(args), new bn_js_1.BN(gas), new bn_js_1.BN(deposit));\n            }\n        case \"Transfer\":\n            {\n                const { deposit } = action.params;\n                return near_api_js_1.transactions.transfer(new bn_js_1.BN(deposit));\n            }\n        case \"Stake\":\n            {\n                const { stake, publicKey } = action.params;\n                return near_api_js_1.transactions.stake(new bn_js_1.BN(stake), near_api_js_1.utils.PublicKey.from(publicKey));\n            }\n        case \"AddKey\":\n            {\n                const { publicKey, accessKey } = action.params;\n                return near_api_js_1.transactions.addKey(near_api_js_1.utils.PublicKey.from(publicKey), getAccessKey(accessKey.permission));\n            }\n        case \"DeleteKey\":\n            {\n                const { publicKey } = action.params;\n                return near_api_js_1.transactions.deleteKey(near_api_js_1.utils.PublicKey.from(publicKey));\n            }\n        case \"DeleteAccount\":\n            {\n                const { beneficiaryId } = action.params;\n                return near_api_js_1.transactions.deleteAccount(beneficiaryId);\n            }\n        default:\n            throw new Error(\"Invalid action type\");\n    }\n};\nexports.createAction = createAction; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGhlcmUtd2FsbGV0L2NvcmUvYnVpbGQvYWN0aW9ucy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsb0JBQW9CLEdBQUdBLGlCQUFpQixHQUFHLEtBQUs7QUFDaEQsTUFBTUksVUFBVUMsbUJBQU9BLENBQUMsbURBQU87QUFDL0IsTUFBTUMsZ0JBQWdCRCxtQkFBT0EsQ0FBQyxrRUFBYTtBQUMzQyxNQUFNRSxlQUFlLENBQUNDO0lBQ2xCLElBQUlBLGVBQWUsY0FBYztRQUM3QixPQUFPRixjQUFjRyxZQUFZLENBQUNDLGFBQWE7SUFDbkQ7SUFDQSxNQUFNLEVBQUVDLFVBQVUsRUFBRUMsY0FBYyxFQUFFLEVBQUUsR0FBR0o7SUFDekMsTUFBTUssWUFBWUwsV0FBV0ssU0FBUyxHQUFHLElBQUlULFFBQVFVLEVBQUUsQ0FBQ04sV0FBV0ssU0FBUyxJQUFJRTtJQUNoRixPQUFPVCxjQUFjRyxZQUFZLENBQUNPLHFCQUFxQixDQUFDTCxZQUFZQyxhQUFhQztBQUNyRjtBQUNBLE1BQU1WLFlBQVksQ0FBQ2M7SUFDZixJQUFJLE9BQU9BLFNBQVMsVUFDaEIsT0FBT0MsT0FBT0MsSUFBSSxDQUFDRixNQUFNO0lBQzdCLE9BQU9BO0FBQ1g7QUFDQWpCLGlCQUFpQixHQUFHRztBQUNwQixNQUFNRCxlQUFlLENBQUNrQjtJQUNsQixPQUFRQSxPQUFPQyxJQUFJO1FBQ2YsS0FBSztZQUNELE9BQU9mLGNBQWNHLFlBQVksQ0FBQ2EsYUFBYTtRQUNuRCxLQUFLO1lBQWtCO2dCQUNuQixNQUFNLEVBQUVDLElBQUksRUFBRSxHQUFHSCxPQUFPSSxNQUFNO2dCQUM5QixPQUFPbEIsY0FBY0csWUFBWSxDQUFDZ0IsY0FBYyxDQUFDRjtZQUNyRDtRQUNBLEtBQUs7WUFBZ0I7Z0JBQ2pCLE1BQU0sRUFBRUcsVUFBVSxFQUFFQyxJQUFJLEVBQUVDLEdBQUcsRUFBRUMsT0FBTyxFQUFFLEdBQUdULE9BQU9JLE1BQU07Z0JBQ3hELE9BQU9sQixjQUFjRyxZQUFZLENBQUNxQixZQUFZLENBQUNKLFlBQVksQ0FBQyxHQUFHMUIsUUFBUUcsU0FBUyxFQUFFd0IsT0FBTyxJQUFJdkIsUUFBUVUsRUFBRSxDQUFDYyxNQUFNLElBQUl4QixRQUFRVSxFQUFFLENBQUNlO1lBQ2pJO1FBQ0EsS0FBSztZQUFZO2dCQUNiLE1BQU0sRUFBRUEsT0FBTyxFQUFFLEdBQUdULE9BQU9JLE1BQU07Z0JBQ2pDLE9BQU9sQixjQUFjRyxZQUFZLENBQUNzQixRQUFRLENBQUMsSUFBSTNCLFFBQVFVLEVBQUUsQ0FBQ2U7WUFDOUQ7UUFDQSxLQUFLO1lBQVM7Z0JBQ1YsTUFBTSxFQUFFRyxLQUFLLEVBQUVDLFNBQVMsRUFBRSxHQUFHYixPQUFPSSxNQUFNO2dCQUMxQyxPQUFPbEIsY0FBY0csWUFBWSxDQUFDdUIsS0FBSyxDQUFDLElBQUk1QixRQUFRVSxFQUFFLENBQUNrQixRQUFRMUIsY0FBYzRCLEtBQUssQ0FBQ0MsU0FBUyxDQUFDaEIsSUFBSSxDQUFDYztZQUN0RztRQUNBLEtBQUs7WUFBVTtnQkFDWCxNQUFNLEVBQUVBLFNBQVMsRUFBRUcsU0FBUyxFQUFFLEdBQUdoQixPQUFPSSxNQUFNO2dCQUM5QyxPQUFPbEIsY0FBY0csWUFBWSxDQUFDNEIsTUFBTSxDQUFDL0IsY0FBYzRCLEtBQUssQ0FBQ0MsU0FBUyxDQUFDaEIsSUFBSSxDQUFDYyxZQUM1RTFCLGFBQWE2QixVQUFVNUIsVUFBVTtZQUNyQztRQUNBLEtBQUs7WUFBYTtnQkFDZCxNQUFNLEVBQUV5QixTQUFTLEVBQUUsR0FBR2IsT0FBT0ksTUFBTTtnQkFDbkMsT0FBT2xCLGNBQWNHLFlBQVksQ0FBQzZCLFNBQVMsQ0FBQ2hDLGNBQWM0QixLQUFLLENBQUNDLFNBQVMsQ0FBQ2hCLElBQUksQ0FBQ2M7WUFDbkY7UUFDQSxLQUFLO1lBQWlCO2dCQUNsQixNQUFNLEVBQUVNLGFBQWEsRUFBRSxHQUFHbkIsT0FBT0ksTUFBTTtnQkFDdkMsT0FBT2xCLGNBQWNHLFlBQVksQ0FBQytCLGFBQWEsQ0FBQ0Q7WUFDcEQ7UUFDQTtZQUNJLE1BQU0sSUFBSUUsTUFBTTtJQUN4QjtBQUNKO0FBQ0F6QyxvQkFBb0IsR0FBR0UsY0FDdkIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaS1hbS1uZWFyYnkvLi9ub2RlX21vZHVsZXMvQGhlcmUtd2FsbGV0L2NvcmUvYnVpbGQvYWN0aW9ucy9pbmRleC5qcz80Njc3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVBY3Rpb24gPSBleHBvcnRzLnBhcnNlQXJncyA9IHZvaWQgMDtcbmNvbnN0IGJuX2pzXzEgPSByZXF1aXJlKFwiYm4uanNcIik7XG5jb25zdCBuZWFyX2FwaV9qc18xID0gcmVxdWlyZShcIm5lYXItYXBpLWpzXCIpO1xuY29uc3QgZ2V0QWNjZXNzS2V5ID0gKHBlcm1pc3Npb24pID0+IHtcbiAgICBpZiAocGVybWlzc2lvbiA9PT0gXCJGdWxsQWNjZXNzXCIpIHtcbiAgICAgICAgcmV0dXJuIG5lYXJfYXBpX2pzXzEudHJhbnNhY3Rpb25zLmZ1bGxBY2Nlc3NLZXkoKTtcbiAgICB9XG4gICAgY29uc3QgeyByZWNlaXZlcklkLCBtZXRob2ROYW1lcyA9IFtdIH0gPSBwZXJtaXNzaW9uO1xuICAgIGNvbnN0IGFsbG93YW5jZSA9IHBlcm1pc3Npb24uYWxsb3dhbmNlID8gbmV3IGJuX2pzXzEuQk4ocGVybWlzc2lvbi5hbGxvd2FuY2UpIDogdW5kZWZpbmVkO1xuICAgIHJldHVybiBuZWFyX2FwaV9qc18xLnRyYW5zYWN0aW9ucy5mdW5jdGlvbkNhbGxBY2Nlc3NLZXkocmVjZWl2ZXJJZCwgbWV0aG9kTmFtZXMsIGFsbG93YW5jZSk7XG59O1xuY29uc3QgcGFyc2VBcmdzID0gKGRhdGEpID0+IHtcbiAgICBpZiAodHlwZW9mIGRhdGEgPT09IFwic3RyaW5nXCIpXG4gICAgICAgIHJldHVybiBCdWZmZXIuZnJvbShkYXRhLCBcImJhc2U2NFwiKTtcbiAgICByZXR1cm4gZGF0YTtcbn07XG5leHBvcnRzLnBhcnNlQXJncyA9IHBhcnNlQXJncztcbmNvbnN0IGNyZWF0ZUFjdGlvbiA9IChhY3Rpb24pID0+IHtcbiAgICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgICAgIGNhc2UgXCJDcmVhdGVBY2NvdW50XCI6XG4gICAgICAgICAgICByZXR1cm4gbmVhcl9hcGlfanNfMS50cmFuc2FjdGlvbnMuY3JlYXRlQWNjb3VudCgpO1xuICAgICAgICBjYXNlIFwiRGVwbG95Q29udHJhY3RcIjoge1xuICAgICAgICAgICAgY29uc3QgeyBjb2RlIH0gPSBhY3Rpb24ucGFyYW1zO1xuICAgICAgICAgICAgcmV0dXJuIG5lYXJfYXBpX2pzXzEudHJhbnNhY3Rpb25zLmRlcGxveUNvbnRyYWN0KGNvZGUpO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgXCJGdW5jdGlvbkNhbGxcIjoge1xuICAgICAgICAgICAgY29uc3QgeyBtZXRob2ROYW1lLCBhcmdzLCBnYXMsIGRlcG9zaXQgfSA9IGFjdGlvbi5wYXJhbXM7XG4gICAgICAgICAgICByZXR1cm4gbmVhcl9hcGlfanNfMS50cmFuc2FjdGlvbnMuZnVuY3Rpb25DYWxsKG1ldGhvZE5hbWUsICgwLCBleHBvcnRzLnBhcnNlQXJncykoYXJncyksIG5ldyBibl9qc18xLkJOKGdhcyksIG5ldyBibl9qc18xLkJOKGRlcG9zaXQpKTtcbiAgICAgICAgfVxuICAgICAgICBjYXNlIFwiVHJhbnNmZXJcIjoge1xuICAgICAgICAgICAgY29uc3QgeyBkZXBvc2l0IH0gPSBhY3Rpb24ucGFyYW1zO1xuICAgICAgICAgICAgcmV0dXJuIG5lYXJfYXBpX2pzXzEudHJhbnNhY3Rpb25zLnRyYW5zZmVyKG5ldyBibl9qc18xLkJOKGRlcG9zaXQpKTtcbiAgICAgICAgfVxuICAgICAgICBjYXNlIFwiU3Rha2VcIjoge1xuICAgICAgICAgICAgY29uc3QgeyBzdGFrZSwgcHVibGljS2V5IH0gPSBhY3Rpb24ucGFyYW1zO1xuICAgICAgICAgICAgcmV0dXJuIG5lYXJfYXBpX2pzXzEudHJhbnNhY3Rpb25zLnN0YWtlKG5ldyBibl9qc18xLkJOKHN0YWtlKSwgbmVhcl9hcGlfanNfMS51dGlscy5QdWJsaWNLZXkuZnJvbShwdWJsaWNLZXkpKTtcbiAgICAgICAgfVxuICAgICAgICBjYXNlIFwiQWRkS2V5XCI6IHtcbiAgICAgICAgICAgIGNvbnN0IHsgcHVibGljS2V5LCBhY2Nlc3NLZXkgfSA9IGFjdGlvbi5wYXJhbXM7XG4gICAgICAgICAgICByZXR1cm4gbmVhcl9hcGlfanNfMS50cmFuc2FjdGlvbnMuYWRkS2V5KG5lYXJfYXBpX2pzXzEudXRpbHMuUHVibGljS2V5LmZyb20ocHVibGljS2V5KSwgLy8gVE9ETzogVXNlIGFjY2Vzc0tleS5ub25jZT8gbmVhci1hcGktanMgc2VlbXMgdG8gdGhpbmsgMCBpcyBmaW5lP1xuICAgICAgICAgICAgZ2V0QWNjZXNzS2V5KGFjY2Vzc0tleS5wZXJtaXNzaW9uKSk7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBcIkRlbGV0ZUtleVwiOiB7XG4gICAgICAgICAgICBjb25zdCB7IHB1YmxpY0tleSB9ID0gYWN0aW9uLnBhcmFtcztcbiAgICAgICAgICAgIHJldHVybiBuZWFyX2FwaV9qc18xLnRyYW5zYWN0aW9ucy5kZWxldGVLZXkobmVhcl9hcGlfanNfMS51dGlscy5QdWJsaWNLZXkuZnJvbShwdWJsaWNLZXkpKTtcbiAgICAgICAgfVxuICAgICAgICBjYXNlIFwiRGVsZXRlQWNjb3VudFwiOiB7XG4gICAgICAgICAgICBjb25zdCB7IGJlbmVmaWNpYXJ5SWQgfSA9IGFjdGlvbi5wYXJhbXM7XG4gICAgICAgICAgICByZXR1cm4gbmVhcl9hcGlfanNfMS50cmFuc2FjdGlvbnMuZGVsZXRlQWNjb3VudChiZW5lZmljaWFyeUlkKTtcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBhY3Rpb24gdHlwZVwiKTtcbiAgICB9XG59O1xuZXhwb3J0cy5jcmVhdGVBY3Rpb24gPSBjcmVhdGVBY3Rpb247XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJjcmVhdGVBY3Rpb24iLCJwYXJzZUFyZ3MiLCJibl9qc18xIiwicmVxdWlyZSIsIm5lYXJfYXBpX2pzXzEiLCJnZXRBY2Nlc3NLZXkiLCJwZXJtaXNzaW9uIiwidHJhbnNhY3Rpb25zIiwiZnVsbEFjY2Vzc0tleSIsInJlY2VpdmVySWQiLCJtZXRob2ROYW1lcyIsImFsbG93YW5jZSIsIkJOIiwidW5kZWZpbmVkIiwiZnVuY3Rpb25DYWxsQWNjZXNzS2V5IiwiZGF0YSIsIkJ1ZmZlciIsImZyb20iLCJhY3Rpb24iLCJ0eXBlIiwiY3JlYXRlQWNjb3VudCIsImNvZGUiLCJwYXJhbXMiLCJkZXBsb3lDb250cmFjdCIsIm1ldGhvZE5hbWUiLCJhcmdzIiwiZ2FzIiwiZGVwb3NpdCIsImZ1bmN0aW9uQ2FsbCIsInRyYW5zZmVyIiwic3Rha2UiLCJwdWJsaWNLZXkiLCJ1dGlscyIsIlB1YmxpY0tleSIsImFjY2Vzc0tleSIsImFkZEtleSIsImRlbGV0ZUtleSIsImJlbmVmaWNpYXJ5SWQiLCJkZWxldGVBY2NvdW50IiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@here-wallet/core/build/actions/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@here-wallet/core/build/actions/types.js":
/*!***************************************************************!*\
  !*** ./node_modules/@here-wallet/core/build/actions/types.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGhlcmUtd2FsbGV0L2NvcmUvYnVpbGQvYWN0aW9ucy90eXBlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQyxFQUM3RCxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pLWFtLW5lYXJieS8uL25vZGVfbW9kdWxlcy9AaGVyZS13YWxsZXQvY29yZS9idWlsZC9hY3Rpb25zL3R5cGVzLmpzPzhjYzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@here-wallet/core/build/actions/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@here-wallet/core/build/here-provider/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@here-wallet/core/build/here-provider/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = this && this.__rest || function(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.proxyProvider = exports.getRequest = exports.proxyApi = exports.deleteRequest = exports.getResponse = exports.createRequest = void 0;\nconst utils_1 = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/@here-wallet/core/build/utils.js\");\nconst provider_1 = __webpack_require__(/*! ../provider */ \"(ssr)/./node_modules/@here-wallet/core/build/provider.js\");\nconst methods_1 = __webpack_require__(/*! ./methods */ \"(ssr)/./node_modules/@here-wallet/core/build/here-provider/methods.js\");\nObject.defineProperty(exports, \"createRequest\", ({\n    enumerable: true,\n    get: function() {\n        return methods_1.createRequest;\n    }\n}));\nObject.defineProperty(exports, \"getResponse\", ({\n    enumerable: true,\n    get: function() {\n        return methods_1.getResponse;\n    }\n}));\nObject.defineProperty(exports, \"deleteRequest\", ({\n    enumerable: true,\n    get: function() {\n        return methods_1.deleteRequest;\n    }\n}));\nObject.defineProperty(exports, \"proxyApi\", ({\n    enumerable: true,\n    get: function() {\n        return methods_1.proxyApi;\n    }\n}));\nObject.defineProperty(exports, \"getRequest\", ({\n    enumerable: true,\n    get: function() {\n        return methods_1.getRequest;\n    }\n}));\nconst proxyProvider = (conf)=>__awaiter(void 0, void 0, void 0, function*() {\n        let { strategy, request, disableCleanupRequest, id, signal } = conf, delegate = __rest(conf, [\n            \"strategy\",\n            \"request\",\n            \"disableCleanupRequest\",\n            \"id\",\n            \"signal\"\n        ]);\n        if (id != null) request = yield (0, methods_1.getRequest)(id, signal);\n        else id = yield (0, methods_1.createRequest)(request, signal);\n        return new Promise((resolve, reject)=>{\n            var _a, _b;\n            const socketApi = methods_1.proxyApi.replace(\"https\", \"wss\");\n            let fallbackHttpTimer = null;\n            let socket = null;\n            const clear = ()=>__awaiter(void 0, void 0, void 0, function*() {\n                    fallbackHttpTimer = -1;\n                    clearInterval(fallbackHttpTimer);\n                    socket === null || socket === void 0 ? void 0 : socket.close();\n                    if (disableCleanupRequest !== true) {\n                        yield (0, methods_1.deleteRequest)(id);\n                    }\n                });\n            const processApprove = (data)=>{\n                var _a, _b, _c, _d, _e, _f;\n                switch(data.status){\n                    case provider_1.HereProviderStatus.APPROVING:\n                        (_a = delegate.onApproving) === null || _a === void 0 ? void 0 : _a.call(delegate, data);\n                        (_b = strategy === null || strategy === void 0 ? void 0 : strategy.onApproving) === null || _b === void 0 ? void 0 : _b.call(strategy, data);\n                        return;\n                    case provider_1.HereProviderStatus.FAILED:\n                        clear();\n                        reject(new provider_1.HereProviderError(data.payload));\n                        (_c = delegate.onFailed) === null || _c === void 0 ? void 0 : _c.call(delegate, data);\n                        (_d = strategy === null || strategy === void 0 ? void 0 : strategy.onFailed) === null || _d === void 0 ? void 0 : _d.call(strategy, data);\n                        return;\n                    case provider_1.HereProviderStatus.SUCCESS:\n                        clear();\n                        resolve(data);\n                        (_e = delegate.onSuccess) === null || _e === void 0 ? void 0 : _e.call(delegate, data);\n                        (_f = strategy === null || strategy === void 0 ? void 0 : strategy.onSuccess) === null || _f === void 0 ? void 0 : _f.call(strategy, data);\n                        return;\n                }\n            };\n            const rejectAction = (payload)=>{\n                processApprove({\n                    status: provider_1.HereProviderStatus.FAILED,\n                    payload\n                });\n            };\n            (_a = delegate.onRequested) === null || _a === void 0 ? void 0 : _a.call(delegate, id, request, rejectAction);\n            (_b = strategy === null || strategy === void 0 ? void 0 : strategy.onRequested) === null || _b === void 0 ? void 0 : _b.call(strategy, id, request, rejectAction);\n            signal === null || signal === void 0 ? void 0 : signal.addEventListener(\"abort\", ()=>rejectAction());\n            const setupTimer = ()=>{\n                if (fallbackHttpTimer === -1) {\n                    return;\n                }\n                fallbackHttpTimer = setTimeout(()=>__awaiter(void 0, void 0, void 0, function*() {\n                        var _a, _b;\n                        try {\n                            const data = yield (0, methods_1.getResponse)(id);\n                            if (fallbackHttpTimer === -1) return;\n                            processApprove(data);\n                            setupTimer();\n                        } catch (e) {\n                            const status = provider_1.HereProviderStatus.FAILED;\n                            const error = e instanceof Error ? e : undefined;\n                            const payload = error === null || error === void 0 ? void 0 : error.message;\n                            clear();\n                            reject(new provider_1.HereProviderError(payload, error));\n                            (_a = delegate.onFailed) === null || _a === void 0 ? void 0 : _a.call(delegate, {\n                                status,\n                                payload\n                            });\n                            (_b = strategy === null || strategy === void 0 ? void 0 : strategy.onFailed) === null || _b === void 0 ? void 0 : _b.call(strategy, {\n                                status,\n                                payload\n                            });\n                        }\n                    }), 3000);\n            };\n            setupTimer();\n            // Mobile flow doesn't support cross tabs socket background process\n            if ((0, utils_1.isMobile)() === false) {\n                const endpoint = `${socketApi}/ws/${id}`;\n                socket = new WebSocket(endpoint);\n                socket.onmessage = (e)=>{\n                    if (e.data == null) return;\n                    try {\n                        const data = JSON.parse(e.data);\n                        processApprove(data);\n                    } catch (_a) {\n                    // nope\n                    }\n                };\n            }\n        });\n    });\nexports.proxyProvider = proxyProvider; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@here-wallet/core/build/here-provider/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@here-wallet/core/build/here-provider/methods.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@here-wallet/core/build/here-provider/methods.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = this && this.__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.createRequest = exports.deleteRequest = exports.getResponse = exports.getRequest = exports.proxyApi = void 0;\nconst sha1_1 = __importDefault(__webpack_require__(/*! sha1 */ \"(ssr)/./node_modules/sha1/sha1.js\"));\nconst uuid4_1 = __importDefault(__webpack_require__(/*! uuid4 */ \"(ssr)/./node_modules/uuid4/index.mjs\"));\nconst serialize_1 = __webpack_require__(/*! near-api-js/lib/utils/serialize */ \"(ssr)/./node_modules/near-api-js/lib/utils/serialize.js\");\nconst utils_1 = __webpack_require__(/*! ../utils */ \"(ssr)/./node_modules/@here-wallet/core/build/utils.js\");\nexports.proxyApi = \"https://h4n.app\";\nconst getRequest = (id, signal)=>__awaiter(void 0, void 0, void 0, function*() {\n        const res = yield fetch(`${exports.proxyApi}/${id}/request`, {\n            signal,\n            headers: {\n                \"content-type\": \"application/json\"\n            },\n            method: \"GET\"\n        });\n        if (res.ok === false) {\n            throw Error((yield res.text()));\n        }\n        const { data } = yield res.json();\n        return JSON.parse((0, serialize_1.base_decode)(data).toString(\"utf8\"));\n    });\nexports.getRequest = getRequest;\nconst getResponse = (id)=>__awaiter(void 0, void 0, void 0, function*() {\n        var _a, _b, _c, _d;\n        const res = yield fetch(`${exports.proxyApi}/${id}/response`, {\n            headers: {\n                \"content-type\": \"application/json\"\n            },\n            method: \"GET\"\n        });\n        if (res.ok === false) {\n            throw Error((yield res.text()));\n        }\n        const { data } = yield res.json();\n        const result = (_a = JSON.parse(data)) !== null && _a !== void 0 ? _a : {};\n        return {\n            account_id: (_b = result.account_id) !== null && _b !== void 0 ? _b : \"\",\n            payload: (_c = result.payload) !== null && _c !== void 0 ? _c : \"\",\n            status: (_d = result.status) !== null && _d !== void 0 ? _d : -1,\n            topic: result.topic\n        };\n    });\nexports.getResponse = getResponse;\nconst deleteRequest = (id)=>__awaiter(void 0, void 0, void 0, function*() {\n        const res = yield fetch(`${exports.proxyApi}/${id}`, {\n            headers: {\n                \"content-type\": \"application/json\"\n            },\n            method: \"DELETE\"\n        });\n        if (res.ok === false) {\n            throw Error((yield res.text()));\n        }\n    });\nexports.deleteRequest = deleteRequest;\nconst createRequest = (request, signal)=>__awaiter(void 0, void 0, void 0, function*() {\n        const query = (0, serialize_1.base_encode)(JSON.stringify(Object.assign(Object.assign({}, request), {\n            _id: (0, uuid4_1.default)()\n        })));\n        const hashsum = (0, sha1_1.default)(query);\n        const id = Buffer.from(hashsum, \"hex\").toString(\"base64\");\n        const urlsafe = id.replaceAll(\"/\", \"_\").replaceAll(\"-\", \"+\").slice(0, 13);\n        const res = yield fetch(`${exports.proxyApi}/${urlsafe}/request`, {\n            method: \"POST\",\n            signal,\n            body: JSON.stringify({\n                topic_id: (0, utils_1.getDeviceId)(),\n                data: query\n            }),\n            headers: {\n                \"content-type\": \"application/json\"\n            }\n        });\n        if (res.ok === false) {\n            throw Error((yield res.text()));\n        }\n        return urlsafe;\n    });\nexports.createRequest = createRequest; //# sourceMappingURL=methods.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@here-wallet/core/build/here-provider/methods.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@here-wallet/core/build/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@here-wallet/core/build/index.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function(m, exports1) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports1, p)) __createBinding(exports1, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.HereWallet = void 0;\nvar wallet_1 = __webpack_require__(/*! ./wallet */ \"(ssr)/./node_modules/@here-wallet/core/build/wallet.js\");\nObject.defineProperty(exports, \"HereWallet\", ({\n    enumerable: true,\n    get: function() {\n        return wallet_1.HereWallet;\n    }\n}));\n__exportStar(__webpack_require__(/*! ./actions */ \"(ssr)/./node_modules/@here-wallet/core/build/actions/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./HereKeyStore */ \"(ssr)/./node_modules/@here-wallet/core/build/HereKeyStore.js\"), exports);\n__exportStar(__webpack_require__(/*! ./JSONStorage */ \"(ssr)/./node_modules/@here-wallet/core/build/JSONStorage.js\"), exports);\n__exportStar(__webpack_require__(/*! ./actions/types */ \"(ssr)/./node_modules/@here-wallet/core/build/actions/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./WidgetStrategy */ \"(ssr)/./node_modules/@here-wallet/core/build/WidgetStrategy.js\"), exports);\n__exportStar(__webpack_require__(/*! ./WindowStrategy */ \"(ssr)/./node_modules/@here-wallet/core/build/WindowStrategy.js\"), exports);\n__exportStar(__webpack_require__(/*! ./provider */ \"(ssr)/./node_modules/@here-wallet/core/build/provider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@here-wallet/core/build/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@here-wallet/core/build/utils.js\"), exports);\n__exportStar(__webpack_require__(/*! ./here-provider */ \"(ssr)/./node_modules/@here-wallet/core/build/here-provider/index.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGhlcmUtd2FsbGV0L2NvcmUvYnVpbGQvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxrQkFBa0IsSUFBSyxJQUFJLElBQUksQ0FBQ0EsZUFBZSxJQUFNQyxDQUFBQSxPQUFPQyxNQUFNLEdBQUksU0FBU0MsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUMxRixJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkosT0FBT08sY0FBYyxDQUFDTCxHQUFHRyxJQUFJO1FBQUVHLFlBQVk7UUFBTUMsS0FBSztZQUFhLE9BQU9OLENBQUMsQ0FBQ0MsRUFBRTtRQUFFO0lBQUU7QUFDdEYsSUFBTSxTQUFTRixDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQ3RCLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCRixDQUFDLENBQUNHLEdBQUcsR0FBR0YsQ0FBQyxDQUFDQyxFQUFFO0FBQ2hCLENBQUM7QUFDRCxJQUFJTSxlQUFlLElBQUssSUFBSSxJQUFJLENBQUNBLFlBQVksSUFBSyxTQUFTUCxDQUFDLEVBQUVRLFFBQU87SUFDakUsSUFBSyxJQUFJQyxLQUFLVCxFQUFHLElBQUlTLE1BQU0sYUFBYSxDQUFDWixPQUFPYSxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDSixVQUFTQyxJQUFJYixnQkFBZ0JZLFVBQVNSLEdBQUdTO0FBQzNIO0FBQ0FaLDhDQUE2QztJQUFFZ0IsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REwsa0JBQWtCLEdBQUcsS0FBSztBQUMxQixJQUFJTyxXQUFXQyxtQkFBT0EsQ0FBQyx3RUFBVTtBQUNqQ25CLDhDQUE2QztJQUFFUSxZQUFZO0lBQU1DLEtBQUs7UUFBYyxPQUFPUyxTQUFTRCxVQUFVO0lBQUU7QUFBRSxDQUFDLEVBQUM7QUFDcEhQLGFBQWFTLG1CQUFPQSxDQUFDLGdGQUFXLEdBQUdSO0FBQ25DRCxhQUFhUyxtQkFBT0EsQ0FBQyxvRkFBZ0IsR0FBR1I7QUFDeENELGFBQWFTLG1CQUFPQSxDQUFDLGtGQUFlLEdBQUdSO0FBQ3ZDRCxhQUFhUyxtQkFBT0EsQ0FBQyxzRkFBaUIsR0FBR1I7QUFDekNELGFBQWFTLG1CQUFPQSxDQUFDLHdGQUFrQixHQUFHUjtBQUMxQ0QsYUFBYVMsbUJBQU9BLENBQUMsd0ZBQWtCLEdBQUdSO0FBQzFDRCxhQUFhUyxtQkFBT0EsQ0FBQyw0RUFBWSxHQUFHUjtBQUNwQ0QsYUFBYVMsbUJBQU9BLENBQUMsc0VBQVMsR0FBR1I7QUFDakNELGFBQWFTLG1CQUFPQSxDQUFDLHNFQUFTLEdBQUdSO0FBQ2pDRCxhQUFhUyxtQkFBT0EsQ0FBQyw0RkFBaUIsR0FBR1IsVUFDekMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaS1hbS1uZWFyYnkvLi9ub2RlX21vZHVsZXMvQGhlcmUtd2FsbGV0L2NvcmUvYnVpbGQvaW5kZXguanM/NGZhNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9KTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IZXJlV2FsbGV0ID0gdm9pZCAwO1xudmFyIHdhbGxldF8xID0gcmVxdWlyZShcIi4vd2FsbGV0XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSGVyZVdhbGxldFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gd2FsbGV0XzEuSGVyZVdhbGxldDsgfSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hY3Rpb25zXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9IZXJlS2V5U3RvcmVcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0pTT05TdG9yYWdlXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hY3Rpb25zL3R5cGVzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9XaWRnZXRTdHJhdGVneVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vV2luZG93U3RyYXRlZ3lcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3Byb3ZpZGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdXRpbHNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2hlcmUtcHJvdmlkZXJcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIl9fY3JlYXRlQmluZGluZyIsIk9iamVjdCIsImNyZWF0ZSIsIm8iLCJtIiwiayIsImsyIiwidW5kZWZpbmVkIiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiX19leHBvcnRTdGFyIiwiZXhwb3J0cyIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJ2YWx1ZSIsIkhlcmVXYWxsZXQiLCJ3YWxsZXRfMSIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@here-wallet/core/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@here-wallet/core/build/nep0314.js":
/*!*********************************************************!*\
  !*** ./node_modules/@here-wallet/core/build/nep0314.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, {\n        enumerable: true,\n        get: function() {\n            return m[k];\n        }\n    });\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = this && this.__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.verifySignature = exports.authPayloadSchema = exports.AuthPayload = void 0;\nconst borsh = __importStar(__webpack_require__(/*! borsh */ \"(ssr)/./node_modules/borsh/lib/index.js\"));\nconst js_sha256_1 = __importDefault(__webpack_require__(/*! js-sha256 */ \"(ssr)/./node_modules/js-sha256/src/sha256.js\"));\nconst utils_1 = __webpack_require__(/*! near-api-js/lib/utils */ \"(ssr)/./node_modules/near-api-js/lib/utils/index.js\");\nclass AuthPayload {\n    constructor({ message, nonce, recipient, callbackUrl }){\n        this.tag = 2147484061;\n        this.message = message;\n        this.nonce = nonce;\n        this.recipient = recipient;\n        if (callbackUrl) {\n            this.callbackUrl = callbackUrl;\n        }\n    }\n}\nexports.AuthPayload = AuthPayload;\nexports.authPayloadSchema = new Map([\n    [\n        AuthPayload,\n        {\n            kind: \"struct\",\n            fields: [\n                [\n                    \"tag\",\n                    \"u32\"\n                ],\n                [\n                    \"message\",\n                    \"string\"\n                ],\n                [\n                    \"nonce\",\n                    [\n                        32\n                    ]\n                ],\n                [\n                    \"recipient\",\n                    \"string\"\n                ],\n                [\n                    \"callbackUrl\",\n                    {\n                        kind: \"option\",\n                        type: \"string\"\n                    }\n                ]\n            ]\n        }\n    ]\n]);\nfunction verifySignature(request, result) {\n    // Reconstruct the payload that was **actually signed**\n    const payload = new AuthPayload(request);\n    const borsh_payload = borsh.serialize(exports.authPayloadSchema, payload);\n    const to_sign = Uint8Array.from(js_sha256_1.default.sha256.array(borsh_payload));\n    // Reconstruct the signature from the parameter given in the URL\n    let real_signature = new Uint8Array(Buffer.from(result.signature, \"base64\"));\n    // Use the public Key to verify that the private-counterpart signed the message\n    const myPK = utils_1.PublicKey.from(result.publicKey);\n    return myPK.verify(to_sign, real_signature);\n}\nexports.verifySignature = verifySignature; //# sourceMappingURL=nep0314.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGhlcmUtd2FsbGV0L2NvcmUvYnVpbGQvbmVwMDMxNC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLGtCQUFrQixJQUFLLElBQUksSUFBSSxDQUFDQSxlQUFlLElBQU1DLENBQUFBLE9BQU9DLE1BQU0sR0FBSSxTQUFTQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxFQUFFO0lBQzFGLElBQUlBLE9BQU9DLFdBQVdELEtBQUtEO0lBQzNCSixPQUFPTyxjQUFjLENBQUNMLEdBQUdHLElBQUk7UUFBRUcsWUFBWTtRQUFNQyxLQUFLO1lBQWEsT0FBT04sQ0FBQyxDQUFDQyxFQUFFO1FBQUU7SUFBRTtBQUN0RixJQUFNLFNBQVNGLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLEVBQUU7SUFDdEIsSUFBSUEsT0FBT0MsV0FBV0QsS0FBS0Q7SUFDM0JGLENBQUMsQ0FBQ0csR0FBRyxHQUFHRixDQUFDLENBQUNDLEVBQUU7QUFDaEIsQ0FBQztBQUNELElBQUlNLHFCQUFxQixJQUFLLElBQUksSUFBSSxDQUFDQSxrQkFBa0IsSUFBTVYsQ0FBQUEsT0FBT0MsTUFBTSxHQUFJLFNBQVNDLENBQUMsRUFBRVMsQ0FBQztJQUN6RlgsT0FBT08sY0FBYyxDQUFDTCxHQUFHLFdBQVc7UUFBRU0sWUFBWTtRQUFNSSxPQUFPRDtJQUFFO0FBQ3JFLElBQUssU0FBU1QsQ0FBQyxFQUFFUyxDQUFDO0lBQ2RULENBQUMsQ0FBQyxVQUFVLEdBQUdTO0FBQ25CO0FBQ0EsSUFBSUUsZUFBZSxJQUFLLElBQUksSUFBSSxDQUFDQSxZQUFZLElBQUssU0FBVUMsR0FBRztJQUMzRCxJQUFJQSxPQUFPQSxJQUFJQyxVQUFVLEVBQUUsT0FBT0Q7SUFDbEMsSUFBSUUsU0FBUyxDQUFDO0lBQ2QsSUFBSUYsT0FBTyxNQUFNO1FBQUEsSUFBSyxJQUFJVixLQUFLVSxJQUFLLElBQUlWLE1BQU0sYUFBYUosT0FBT2lCLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNMLEtBQUtWLElBQUlMLGdCQUFnQmlCLFFBQVFGLEtBQUtWO0lBQUU7SUFDeElNLG1CQUFtQk0sUUFBUUY7SUFDM0IsT0FBT0U7QUFDWDtBQUNBLElBQUlJLGtCQUFrQixJQUFLLElBQUksSUFBSSxDQUFDQSxlQUFlLElBQUssU0FBVU4sR0FBRztJQUNqRSxPQUFPLE9BQVFBLElBQUlDLFVBQVUsR0FBSUQsTUFBTTtRQUFFLFdBQVdBO0lBQUk7QUFDNUQ7QUFDQWQsOENBQTZDO0lBQUVZLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RTLHVCQUF1QixHQUFHQSx5QkFBeUIsR0FBR0EsbUJBQW1CLEdBQUcsS0FBSztBQUNqRixNQUFNSSxRQUFRWixhQUFhYSxtQkFBT0EsQ0FBQyxzREFBTztBQUMxQyxNQUFNQyxjQUFjUCxnQkFBZ0JNLG1CQUFPQSxDQUFDLCtEQUFXO0FBQ3ZELE1BQU1FLFVBQVVGLG1CQUFPQSxDQUFDLGtGQUF1QjtBQUMvQyxNQUFNRjtJQUNGSyxZQUFZLEVBQUVDLE9BQU8sRUFBRUMsS0FBSyxFQUFFQyxTQUFTLEVBQUVDLFdBQVcsRUFBRSxDQUFFO1FBQ3BELElBQUksQ0FBQ0MsR0FBRyxHQUFHO1FBQ1gsSUFBSSxDQUFDSixPQUFPLEdBQUdBO1FBQ2YsSUFBSSxDQUFDQyxLQUFLLEdBQUdBO1FBQ2IsSUFBSSxDQUFDQyxTQUFTLEdBQUdBO1FBQ2pCLElBQUlDLGFBQWE7WUFDYixJQUFJLENBQUNBLFdBQVcsR0FBR0E7UUFDdkI7SUFDSjtBQUNKO0FBQ0FaLG1CQUFtQixHQUFHRztBQUN0QkgseUJBQXlCLEdBQUcsSUFBSWMsSUFBSTtJQUNoQztRQUNJWDtRQUNBO1lBQ0lZLE1BQU07WUFDTkMsUUFBUTtnQkFDSjtvQkFBQztvQkFBTztpQkFBTTtnQkFDZDtvQkFBQztvQkFBVztpQkFBUztnQkFDckI7b0JBQUM7b0JBQVM7d0JBQUM7cUJBQUc7aUJBQUM7Z0JBQ2Y7b0JBQUM7b0JBQWE7aUJBQVM7Z0JBQ3ZCO29CQUFDO29CQUFlO3dCQUFFRCxNQUFNO3dCQUFVRSxNQUFNO29CQUFTO2lCQUFFO2FBQ3REO1FBQ0w7S0FDSDtDQUNKO0FBQ0QsU0FBU2hCLGdCQUFnQmlCLE9BQU8sRUFBRXZCLE1BQU07SUFDcEMsdURBQXVEO0lBQ3ZELE1BQU13QixVQUFVLElBQUloQixZQUFZZTtJQUNoQyxNQUFNRSxnQkFBZ0JoQixNQUFNaUIsU0FBUyxDQUFDckIsUUFBUUUsaUJBQWlCLEVBQUVpQjtJQUNqRSxNQUFNRyxVQUFVQyxXQUFXQyxJQUFJLENBQUNsQixZQUFZbUIsT0FBTyxDQUFDQyxNQUFNLENBQUNDLEtBQUssQ0FBQ1A7SUFDakUsZ0VBQWdFO0lBQ2hFLElBQUlRLGlCQUFpQixJQUFJTCxXQUFXTSxPQUFPTCxJQUFJLENBQUM3QixPQUFPbUMsU0FBUyxFQUFFO0lBQ2xFLCtFQUErRTtJQUMvRSxNQUFNQyxPQUFPeEIsUUFBUXlCLFNBQVMsQ0FBQ1IsSUFBSSxDQUFDN0IsT0FBT3NDLFNBQVM7SUFDcEQsT0FBT0YsS0FBS0csTUFBTSxDQUFDWixTQUFTTTtBQUNoQztBQUNBNUIsdUJBQXVCLEdBQUdDLGlCQUMxQixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pLWFtLW5lYXJieS8uL25vZGVfbW9kdWxlcy9AaGVyZS13YWxsZXQvY29yZS9idWlsZC9uZXAwMzE0LmpzPzRlZmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudmVyaWZ5U2lnbmF0dXJlID0gZXhwb3J0cy5hdXRoUGF5bG9hZFNjaGVtYSA9IGV4cG9ydHMuQXV0aFBheWxvYWQgPSB2b2lkIDA7XG5jb25zdCBib3JzaCA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiYm9yc2hcIikpO1xuY29uc3QganNfc2hhMjU2XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImpzLXNoYTI1NlwiKSk7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIm5lYXItYXBpLWpzL2xpYi91dGlsc1wiKTtcbmNsYXNzIEF1dGhQYXlsb2FkIHtcbiAgICBjb25zdHJ1Y3Rvcih7IG1lc3NhZ2UsIG5vbmNlLCByZWNpcGllbnQsIGNhbGxiYWNrVXJsIH0pIHtcbiAgICAgICAgdGhpcy50YWcgPSAyMTQ3NDg0MDYxO1xuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgICAgICB0aGlzLm5vbmNlID0gbm9uY2U7XG4gICAgICAgIHRoaXMucmVjaXBpZW50ID0gcmVjaXBpZW50O1xuICAgICAgICBpZiAoY2FsbGJhY2tVcmwpIHtcbiAgICAgICAgICAgIHRoaXMuY2FsbGJhY2tVcmwgPSBjYWxsYmFja1VybDtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuQXV0aFBheWxvYWQgPSBBdXRoUGF5bG9hZDtcbmV4cG9ydHMuYXV0aFBheWxvYWRTY2hlbWEgPSBuZXcgTWFwKFtcbiAgICBbXG4gICAgICAgIEF1dGhQYXlsb2FkLFxuICAgICAgICB7XG4gICAgICAgICAgICBraW5kOiBcInN0cnVjdFwiLFxuICAgICAgICAgICAgZmllbGRzOiBbXG4gICAgICAgICAgICAgICAgW1widGFnXCIsIFwidTMyXCJdLFxuICAgICAgICAgICAgICAgIFtcIm1lc3NhZ2VcIiwgXCJzdHJpbmdcIl0sXG4gICAgICAgICAgICAgICAgW1wibm9uY2VcIiwgWzMyXV0sXG4gICAgICAgICAgICAgICAgW1wicmVjaXBpZW50XCIsIFwic3RyaW5nXCJdLFxuICAgICAgICAgICAgICAgIFtcImNhbGxiYWNrVXJsXCIsIHsga2luZDogXCJvcHRpb25cIiwgdHlwZTogXCJzdHJpbmdcIiB9XSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgIH0sXG4gICAgXSxcbl0pO1xuZnVuY3Rpb24gdmVyaWZ5U2lnbmF0dXJlKHJlcXVlc3QsIHJlc3VsdCkge1xuICAgIC8vIFJlY29uc3RydWN0IHRoZSBwYXlsb2FkIHRoYXQgd2FzICoqYWN0dWFsbHkgc2lnbmVkKipcbiAgICBjb25zdCBwYXlsb2FkID0gbmV3IEF1dGhQYXlsb2FkKHJlcXVlc3QpO1xuICAgIGNvbnN0IGJvcnNoX3BheWxvYWQgPSBib3JzaC5zZXJpYWxpemUoZXhwb3J0cy5hdXRoUGF5bG9hZFNjaGVtYSwgcGF5bG9hZCk7XG4gICAgY29uc3QgdG9fc2lnbiA9IFVpbnQ4QXJyYXkuZnJvbShqc19zaGEyNTZfMS5kZWZhdWx0LnNoYTI1Ni5hcnJheShib3JzaF9wYXlsb2FkKSk7XG4gICAgLy8gUmVjb25zdHJ1Y3QgdGhlIHNpZ25hdHVyZSBmcm9tIHRoZSBwYXJhbWV0ZXIgZ2l2ZW4gaW4gdGhlIFVSTFxuICAgIGxldCByZWFsX3NpZ25hdHVyZSA9IG5ldyBVaW50OEFycmF5KEJ1ZmZlci5mcm9tKHJlc3VsdC5zaWduYXR1cmUsIFwiYmFzZTY0XCIpKTtcbiAgICAvLyBVc2UgdGhlIHB1YmxpYyBLZXkgdG8gdmVyaWZ5IHRoYXQgdGhlIHByaXZhdGUtY291bnRlcnBhcnQgc2lnbmVkIHRoZSBtZXNzYWdlXG4gICAgY29uc3QgbXlQSyA9IHV0aWxzXzEuUHVibGljS2V5LmZyb20ocmVzdWx0LnB1YmxpY0tleSk7XG4gICAgcmV0dXJuIG15UEsudmVyaWZ5KHRvX3NpZ24sIHJlYWxfc2lnbmF0dXJlKTtcbn1cbmV4cG9ydHMudmVyaWZ5U2lnbmF0dXJlID0gdmVyaWZ5U2lnbmF0dXJlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bmVwMDMxNC5qcy5tYXAiXSwibmFtZXMiOlsiX19jcmVhdGVCaW5kaW5nIiwiT2JqZWN0IiwiY3JlYXRlIiwibyIsIm0iLCJrIiwiazIiLCJ1bmRlZmluZWQiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJfX3NldE1vZHVsZURlZmF1bHQiLCJ2IiwidmFsdWUiLCJfX2ltcG9ydFN0YXIiLCJtb2QiLCJfX2VzTW9kdWxlIiwicmVzdWx0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiX19pbXBvcnREZWZhdWx0IiwiZXhwb3J0cyIsInZlcmlmeVNpZ25hdHVyZSIsImF1dGhQYXlsb2FkU2NoZW1hIiwiQXV0aFBheWxvYWQiLCJib3JzaCIsInJlcXVpcmUiLCJqc19zaGEyNTZfMSIsInV0aWxzXzEiLCJjb25zdHJ1Y3RvciIsIm1lc3NhZ2UiLCJub25jZSIsInJlY2lwaWVudCIsImNhbGxiYWNrVXJsIiwidGFnIiwiTWFwIiwia2luZCIsImZpZWxkcyIsInR5cGUiLCJyZXF1ZXN0IiwicGF5bG9hZCIsImJvcnNoX3BheWxvYWQiLCJzZXJpYWxpemUiLCJ0b19zaWduIiwiVWludDhBcnJheSIsImZyb20iLCJkZWZhdWx0Iiwic2hhMjU2IiwiYXJyYXkiLCJyZWFsX3NpZ25hdHVyZSIsIkJ1ZmZlciIsInNpZ25hdHVyZSIsIm15UEsiLCJQdWJsaWNLZXkiLCJwdWJsaWNLZXkiLCJ2ZXJpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@here-wallet/core/build/nep0314.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@here-wallet/core/build/provider.js":
/*!**********************************************************!*\
  !*** ./node_modules/@here-wallet/core/build/provider.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.HereProviderError = exports.HereProviderStatus = void 0;\nvar HereProviderStatus;\n(function(HereProviderStatus) {\n    HereProviderStatus[HereProviderStatus[\"APPROVING\"] = 1] = \"APPROVING\";\n    HereProviderStatus[HereProviderStatus[\"FAILED\"] = 2] = \"FAILED\";\n    HereProviderStatus[HereProviderStatus[\"SUCCESS\"] = 3] = \"SUCCESS\";\n})(HereProviderStatus = exports.HereProviderStatus || (exports.HereProviderStatus = {}));\nclass HereProviderError extends Error {\n    constructor(payload, parentError){\n        super(payload !== null && payload !== void 0 ? payload : parentError === null || parentError === void 0 ? void 0 : parentError.message);\n        this.payload = payload;\n        this.parentError = parentError;\n    }\n}\nexports.HereProviderError = HereProviderError; //# sourceMappingURL=provider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGhlcmUtd2FsbGV0L2NvcmUvYnVpbGQvcHJvdmlkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHlCQUF5QixHQUFHQSwwQkFBMEIsR0FBRyxLQUFLO0FBQzlELElBQUlHO0FBQ0gsVUFBVUEsa0JBQWtCO0lBQ3pCQSxrQkFBa0IsQ0FBQ0Esa0JBQWtCLENBQUMsWUFBWSxHQUFHLEVBQUUsR0FBRztJQUMxREEsa0JBQWtCLENBQUNBLGtCQUFrQixDQUFDLFNBQVMsR0FBRyxFQUFFLEdBQUc7SUFDdkRBLGtCQUFrQixDQUFDQSxrQkFBa0IsQ0FBQyxVQUFVLEdBQUcsRUFBRSxHQUFHO0FBQzVELEdBQUdBLHFCQUFxQkgsUUFBUUcsa0JBQWtCLElBQUtILENBQUFBLDBCQUEwQixHQUFHLENBQUM7QUFDckYsTUFBTUUsMEJBQTBCRTtJQUM1QkMsWUFBWUMsT0FBTyxFQUFFQyxXQUFXLENBQUU7UUFDOUIsS0FBSyxDQUFDRCxZQUFZLFFBQVFBLFlBQVksS0FBSyxJQUFJQSxVQUFVQyxnQkFBZ0IsUUFBUUEsZ0JBQWdCLEtBQUssSUFBSSxLQUFLLElBQUlBLFlBQVlDLE9BQU87UUFDdEksSUFBSSxDQUFDRixPQUFPLEdBQUdBO1FBQ2YsSUFBSSxDQUFDQyxXQUFXLEdBQUdBO0lBQ3ZCO0FBQ0o7QUFDQVAseUJBQXlCLEdBQUdFLG1CQUM1QixvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pLWFtLW5lYXJieS8uL25vZGVfbW9kdWxlcy9AaGVyZS13YWxsZXQvY29yZS9idWlsZC9wcm92aWRlci5qcz9jZDM0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IZXJlUHJvdmlkZXJFcnJvciA9IGV4cG9ydHMuSGVyZVByb3ZpZGVyU3RhdHVzID0gdm9pZCAwO1xudmFyIEhlcmVQcm92aWRlclN0YXR1cztcbihmdW5jdGlvbiAoSGVyZVByb3ZpZGVyU3RhdHVzKSB7XG4gICAgSGVyZVByb3ZpZGVyU3RhdHVzW0hlcmVQcm92aWRlclN0YXR1c1tcIkFQUFJPVklOR1wiXSA9IDFdID0gXCJBUFBST1ZJTkdcIjtcbiAgICBIZXJlUHJvdmlkZXJTdGF0dXNbSGVyZVByb3ZpZGVyU3RhdHVzW1wiRkFJTEVEXCJdID0gMl0gPSBcIkZBSUxFRFwiO1xuICAgIEhlcmVQcm92aWRlclN0YXR1c1tIZXJlUHJvdmlkZXJTdGF0dXNbXCJTVUNDRVNTXCJdID0gM10gPSBcIlNVQ0NFU1NcIjtcbn0pKEhlcmVQcm92aWRlclN0YXR1cyA9IGV4cG9ydHMuSGVyZVByb3ZpZGVyU3RhdHVzIHx8IChleHBvcnRzLkhlcmVQcm92aWRlclN0YXR1cyA9IHt9KSk7XG5jbGFzcyBIZXJlUHJvdmlkZXJFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihwYXlsb2FkLCBwYXJlbnRFcnJvcikge1xuICAgICAgICBzdXBlcihwYXlsb2FkICE9PSBudWxsICYmIHBheWxvYWQgIT09IHZvaWQgMCA/IHBheWxvYWQgOiBwYXJlbnRFcnJvciA9PT0gbnVsbCB8fCBwYXJlbnRFcnJvciA9PT0gdm9pZCAwID8gdm9pZCAwIDogcGFyZW50RXJyb3IubWVzc2FnZSk7XG4gICAgICAgIHRoaXMucGF5bG9hZCA9IHBheWxvYWQ7XG4gICAgICAgIHRoaXMucGFyZW50RXJyb3IgPSBwYXJlbnRFcnJvcjtcbiAgICB9XG59XG5leHBvcnRzLkhlcmVQcm92aWRlckVycm9yID0gSGVyZVByb3ZpZGVyRXJyb3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm92aWRlci5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJIZXJlUHJvdmlkZXJFcnJvciIsIkhlcmVQcm92aWRlclN0YXR1cyIsIkVycm9yIiwiY29uc3RydWN0b3IiLCJwYXlsb2FkIiwicGFyZW50RXJyb3IiLCJtZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@here-wallet/core/build/provider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@here-wallet/core/build/types.js":
/*!*******************************************************!*\
  !*** ./node_modules/@here-wallet/core/build/types.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n})); //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGhlcmUtd2FsbGV0L2NvcmUvYnVpbGQvdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUMsRUFDN0QsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaS1hbS1uZWFyYnkvLi9ub2RlX21vZHVsZXMvQGhlcmUtd2FsbGV0L2NvcmUvYnVpbGQvdHlwZXMuanM/MTQ1YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@here-wallet/core/build/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@here-wallet/core/build/utils.js":
/*!*******************************************************!*\
  !*** ./node_modules/@here-wallet/core/build/utils.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = this && this.__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isValidAccessKey = exports.internalThrow = exports.getPublicKeys = exports.serializeActions = exports.isMobile = exports.getDeviceId = void 0;\nconst uuid4_1 = __importDefault(__webpack_require__(/*! uuid4 */ \"(ssr)/./node_modules/uuid4/index.mjs\"));\nconst provider_1 = __webpack_require__(/*! ./provider */ \"(ssr)/./node_modules/@here-wallet/core/build/provider.js\");\nconst getDeviceId = ()=>{\n    const topicId = window.localStorage.getItem(\"herewallet-topic\") || (0, uuid4_1.default)();\n    window.localStorage.setItem(\"herewallet-topic\", topicId);\n    return topicId;\n};\nexports.getDeviceId = getDeviceId;\nconst isMobile = ()=>{\n    return window.matchMedia(\"(any-pointer:coarse)\").matches;\n};\nexports.isMobile = isMobile;\nconst serializeActions = (actions)=>{\n    return actions.map((act)=>{\n        if (act.type !== \"FunctionCall\") return act;\n        let { args, deposit, gas, methodName } = act.params;\n        if (ArrayBuffer.isView(args)) {\n            args = Buffer.from(args.buffer, args.byteOffset, args.byteLength);\n        }\n        if (args instanceof Buffer) {\n            args = args.toString(\"base64\");\n        }\n        return {\n            type: act.type,\n            params: {\n                args,\n                deposit,\n                gas,\n                methodName\n            }\n        };\n    });\n};\nexports.serializeActions = serializeActions;\nconst getPublicKeys = (rpc, accountId)=>__awaiter(void 0, void 0, void 0, function*() {\n        const res = yield fetch(rpc, {\n            method: \"POST\",\n            body: JSON.stringify({\n                jsonrpc: \"2.0\",\n                id: \"dontcare\",\n                method: \"query\",\n                params: {\n                    request_type: \"view_access_key_list\",\n                    finality: \"final\",\n                    account_id: accountId\n                }\n            }),\n            headers: {\n                \"content-type\": \"application/json\"\n            }\n        });\n        if (res.ok === false) {\n            return [];\n        }\n        const data = yield res.json();\n        return data.result.keys;\n    });\nexports.getPublicKeys = getPublicKeys;\nconst internalThrow = (error, delegate)=>{\n    var _a, _b, _c;\n    if (error instanceof provider_1.HereProviderError) {\n        throw error;\n    }\n    const result = {\n        payload: error instanceof Error ? error.message : \"UNKNOWN\",\n        status: provider_1.HereProviderStatus.FAILED,\n        account_id: \"\"\n    };\n    (_a = delegate.onFailed) === null || _a === void 0 ? void 0 : _a.call(delegate, result);\n    (_c = (_b = delegate === null || delegate === void 0 ? void 0 : delegate.strategy) === null || _b === void 0 ? void 0 : _b.onFailed) === null || _c === void 0 ? void 0 : _c.call(_b, result);\n    throw error;\n};\nexports.internalThrow = internalThrow;\nconst isValidAccessKey = (accountId, accessKey, call)=>{\n    const { permission } = accessKey.access_key;\n    if (permission === \"FullAccess\") {\n        return true;\n    }\n    if (permission.FunctionCall) {\n        const { receiver_id: allowedReceiverId, method_names: allowedMethods } = permission.FunctionCall;\n        /********************************\n        Accept multisig access keys and let wallets attempt to signAndSendTransaction\n        If an access key has itself as receiverId and method permission add_request_and_confirm, then it is being used in a wallet with multisig contract: https://github.com/near/core-contracts/blob/671c05f09abecabe7a7e58efe942550a35fc3292/multisig/src/lib.rs#L149-L153\n        ********************************/ if (allowedReceiverId === accountId && allowedMethods.includes(\"add_request_and_confirm\")) {\n            return true;\n        }\n        if (allowedReceiverId === call.receiverId) {\n            if (call.actions.length !== 1) return false;\n            return call.actions.every((action)=>{\n                if (action.type !== \"FunctionCall\") return false;\n                return (!action.params.deposit || action.params.deposit.toString() === \"0\") && (allowedMethods.length === 0 || allowedMethods.includes(action.params.methodName));\n            });\n        }\n    }\n    return false;\n};\nexports.isValidAccessKey = isValidAccessKey; //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@here-wallet/core/build/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@here-wallet/core/build/wallet.js":
/*!********************************************************!*\
  !*** ./node_modules/@here-wallet/core/build/wallet.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = this && this.__rest || function(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n};\nvar __importDefault = this && this.__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.HereWallet = void 0;\nconst near_api_js_1 = __webpack_require__(/*! near-api-js */ \"(ssr)/./node_modules/near-api-js/lib/index.js\");\nconst providers_1 = __webpack_require__(/*! near-api-js/lib/providers */ \"(ssr)/./node_modules/near-api-js/lib/providers/index.js\");\nconst key_pair_1 = __webpack_require__(/*! near-api-js/lib/utils/key_pair */ \"(ssr)/./node_modules/near-api-js/lib/utils/key_pair.js\");\nconst js_sha256_1 = __webpack_require__(/*! js-sha256 */ \"(ssr)/./node_modules/js-sha256/src/sha256.js\");\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/bn.js/lib/bn.js\"));\nconst HereKeyStore_1 = __webpack_require__(/*! ./HereKeyStore */ \"(ssr)/./node_modules/@here-wallet/core/build/HereKeyStore.js\");\nconst provider_1 = __webpack_require__(/*! ./provider */ \"(ssr)/./node_modules/@here-wallet/core/build/provider.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@here-wallet/core/build/utils.js\");\nconst here_provider_1 = __webpack_require__(/*! ./here-provider */ \"(ssr)/./node_modules/@here-wallet/core/build/here-provider/index.js\");\nconst actions_1 = __webpack_require__(/*! ./actions */ \"(ssr)/./node_modules/@here-wallet/core/build/actions/index.js\");\nconst WidgetStrategy_1 = __webpack_require__(/*! ./WidgetStrategy */ \"(ssr)/./node_modules/@here-wallet/core/build/WidgetStrategy.js\");\nconst nep0314_1 = __webpack_require__(/*! ./nep0314 */ \"(ssr)/./node_modules/@here-wallet/core/build/nep0314.js\");\nclass AccessDenied extends Error {\n}\nclass HereWallet {\n    constructor({ nodeUrl, networkId = \"mainnet\", authStorage = new HereKeyStore_1.HereKeyStore(), defaultStrategy = ()=>new WidgetStrategy_1.WidgetStrategy(), defaultProvider = here_provider_1.proxyProvider } = {}){\n        this.authStorage = authStorage;\n        this.defaultProvider = defaultProvider;\n        this.defaultStrategy = defaultStrategy;\n        const signer = new near_api_js_1.InMemorySigner(this.authStorage);\n        const rpc = new providers_1.JsonRpcProvider({\n            url: nodeUrl !== null && nodeUrl !== void 0 ? nodeUrl : `https://rpc.${networkId}.near.org`\n        });\n        this.connection = near_api_js_1.Connection.fromConfig({\n            jsvmAccountId: `jsvm.${networkId}`,\n            provider: rpc,\n            networkId,\n            signer\n        });\n    }\n    get rpc() {\n        return this.connection.provider;\n    }\n    get signer() {\n        return this.connection.signer;\n    }\n    get networkId() {\n        return this.connection.networkId;\n    }\n    account(id) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const accountId = id !== null && id !== void 0 ? id : yield this.authStorage.getActiveAccount(this.networkId);\n            if (accountId == null) throw new AccessDenied(\"Wallet not signed in\");\n            return new near_api_js_1.Account(this.connection, accountId);\n        });\n    }\n    isSignedIn() {\n        return __awaiter(this, void 0, void 0, function*() {\n            const id = yield this.authStorage.getActiveAccount(this.networkId);\n            return id != null;\n        });\n    }\n    signOut() {\n        return __awaiter(this, void 0, void 0, function*() {\n            const accountId = yield this.authStorage.getActiveAccount(this.networkId);\n            if (accountId == null) throw new AccessDenied(\"Wallet not signed in\");\n            const key = yield this.authStorage.getKey(this.networkId, accountId);\n            if (key != null) {\n                const publicKey = key.getPublicKey().toString();\n                yield this.silentSignAndSendTransaction({\n                    receiverId: accountId,\n                    actions: [\n                        {\n                            type: \"DeleteKey\",\n                            params: {\n                                publicKey\n                            }\n                        }\n                    ]\n                }).catch(()=>{});\n            }\n            yield this.authStorage.removeKey(this.networkId, accountId);\n        });\n    }\n    getHereBalance(id) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const account = yield this.account(id);\n            const contractId = this.networkId === \"mainnet\" ? \"here.storage.near\" : \"here.storage.testnet\";\n            const hereCoins = yield account.viewFunction({\n                args: {\n                    account_id: account.accountId\n                },\n                methodName: \"ft_balance_of\",\n                contractId\n            }).catch(()=>\"0\");\n            return new bn_js_1.default(hereCoins);\n        });\n    }\n    getAvailableBalance(id) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const account = yield this.account(id);\n            const result = yield account.getAccountBalance();\n            const hereBalance = yield this.getHereBalance();\n            return new bn_js_1.default(result.available).add(new bn_js_1.default(hereBalance));\n        });\n    }\n    getAccounts() {\n        return __awaiter(this, void 0, void 0, function*() {\n            return yield this.authStorage.getAccounts(this.networkId);\n        });\n    }\n    getAccountId() {\n        return __awaiter(this, void 0, void 0, function*() {\n            const accountId = yield this.authStorage.getActiveAccount(this.networkId);\n            if (accountId == null) throw new AccessDenied(\"Wallet not signed in\");\n            return accountId;\n        });\n    }\n    switchAccount(id) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const key = yield this.authStorage.getKey(this.networkId, id);\n            if (key == null) throw new Error(`Account ${id} not signed in`);\n            yield this.authStorage.setActiveAccount(this.networkId, id);\n        });\n    }\n    signIn(_a = {}) {\n        var _b, _c, _d, _e, _f;\n        var { contractId, allowance, methodNames = [] } = _a, delegate = __rest(_a, [\n            \"contractId\",\n            \"allowance\",\n            \"methodNames\"\n        ]);\n        return __awaiter(this, void 0, void 0, function*() {\n            if (contractId == null) {\n                const { accountId } = yield this.authenticate(delegate);\n                // Generate random keypair\n                yield this.authStorage.setKey(this.networkId, accountId, key_pair_1.KeyPairEd25519.fromRandom());\n                yield this.authStorage.setActiveAccount(this.networkId, accountId);\n                return accountId;\n            }\n            delegate.strategy = (_b = delegate.strategy) !== null && _b !== void 0 ? _b : this.defaultStrategy();\n            delegate.provider = (_c = delegate.provider) !== null && _c !== void 0 ? _c : this.defaultProvider;\n            (_d = delegate.onInitialized) === null || _d === void 0 ? void 0 : _d.call(delegate);\n            (_f = (_e = delegate.strategy) === null || _e === void 0 ? void 0 : _e.onInitialized) === null || _f === void 0 ? void 0 : _f.call(_e);\n            try {\n                const accessKey = near_api_js_1.KeyPair.fromRandom(\"ed25519\");\n                const permission = {\n                    receiverId: contractId,\n                    methodNames,\n                    allowance\n                };\n                const data = yield delegate.provider(Object.assign(Object.assign({}, delegate), {\n                    request: {\n                        type: \"call\",\n                        network: this.networkId,\n                        transactions: [\n                            {\n                                actions: [\n                                    {\n                                        type: \"AddKey\",\n                                        params: {\n                                            publicKey: accessKey.getPublicKey().toString(),\n                                            accessKey: {\n                                                permission\n                                            }\n                                        }\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                }));\n                if (data.account_id == null) {\n                    throw Error(\"Transaction is failed\");\n                }\n                yield this.authStorage.setKey(this.networkId, data.account_id, accessKey);\n                yield this.authStorage.setActiveAccount(this.networkId, data.account_id);\n                return data.account_id;\n            } catch (error) {\n                (0, utils_1.internalThrow)(error, delegate);\n                throw error;\n            }\n        });\n    }\n    silentSignAndSendTransaction({ actions, receiverId, signerId }) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const account = yield this.account(signerId);\n            const localKey = yield this.authStorage.getKey(this.networkId, account.accountId);\n            if (localKey == null) throw new AccessDenied();\n            const publicKey = localKey.getPublicKey();\n            const accessKeys = yield account.getAccessKeys();\n            const call = {\n                receiverId,\n                actions\n            };\n            const isValid = accessKeys.some((v)=>{\n                if (v.public_key !== publicKey.toString()) return false;\n                return (0, utils_1.isValidAccessKey)(account.accountId, v, call);\n            });\n            if (isValid === false) throw new AccessDenied();\n            return yield account.signAndSendTransaction({\n                actions: actions.map((a)=>(0, actions_1.createAction)(a)),\n                receiverId: receiverId !== null && receiverId !== void 0 ? receiverId : account.accountId\n            });\n        });\n    }\n    signAndSendTransaction(opts) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        return __awaiter(this, void 0, void 0, function*() {\n            const { signerId, receiverId, actions } = opts, args = __rest(opts, [\n                \"signerId\",\n                \"receiverId\",\n                \"actions\"\n            ]);\n            const delegate = args;\n            delegate.strategy = (_a = delegate.strategy) !== null && _a !== void 0 ? _a : this.defaultStrategy();\n            delegate.provider = (_b = delegate.provider) !== null && _b !== void 0 ? _b : this.defaultProvider;\n            (_c = delegate.onInitialized) === null || _c === void 0 ? void 0 : _c.call(delegate);\n            (_e = (_d = delegate.strategy) === null || _d === void 0 ? void 0 : _d.onInitialized) === null || _e === void 0 ? void 0 : _e.call(_d);\n            try {\n                const result = yield this.silentSignAndSendTransaction({\n                    receiverId,\n                    actions,\n                    signerId\n                });\n                const success = {\n                    status: provider_1.HereProviderStatus.SUCCESS,\n                    payload: result === null || result === void 0 ? void 0 : result.transaction_outcome.id\n                };\n                (_f = delegate.onSuccess) === null || _f === void 0 ? void 0 : _f.call(delegate, success);\n                (_h = (_g = delegate.strategy) === null || _g === void 0 ? void 0 : _g.onSuccess) === null || _h === void 0 ? void 0 : _h.call(_g, success);\n                return result;\n            } catch (e) {\n                try {\n                    // If silent sign return AccessDenied or NotEnoughAllowance we request mobile wallet\n                    // OR its just transaction error\n                    if (!(e instanceof AccessDenied) && (e === null || e === void 0 ? void 0 : e.type) !== \"NotEnoughAllowance\") {\n                        (0, utils_1.internalThrow)(e, delegate);\n                        throw e;\n                    }\n                    const data = yield delegate.provider(Object.assign(Object.assign({}, delegate), {\n                        request: {\n                            type: \"call\",\n                            transactions: [\n                                {\n                                    actions: (0, utils_1.serializeActions)(actions),\n                                    receiverId,\n                                    signerId\n                                }\n                            ],\n                            network: this.networkId\n                        }\n                    }));\n                    if (data.payload == null || data.account_id == null) {\n                        throw Error(\"Transaction not found, but maybe executed\");\n                    }\n                    return yield this.rpc.txStatus(data.payload, data.account_id);\n                } catch (error) {\n                    (0, utils_1.internalThrow)(error, delegate);\n                    throw error;\n                }\n            }\n        });\n    }\n    verifyMessageNEP0413(request, result) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const isSignatureValid = (0, nep0314_1.verifySignature)(request, result);\n            if (!isSignatureValid) throw Error(\"Incorrect signature\");\n            const account = yield this.account(result.accountId);\n            const keys = yield account.getAccessKeys();\n            const isFullAccess = keys.some((k)=>{\n                if (k.public_key !== result.publicKey) return false;\n                if (k.access_key.permission !== \"FullAccess\") return false;\n                return true;\n            });\n            if (!isFullAccess) throw Error(\"Signer public key is not full access\");\n            return true;\n        });\n    }\n    authenticate(options = {}) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function*() {\n            const signRequest = {\n                nonce: (_a = options.nonce) !== null && _a !== void 0 ? _a : (0, crypto_1.randomBytes)(32),\n                recipient: (_b = options.recipient) !== null && _b !== void 0 ? _b : window.location.host,\n                message: (_c = options.message) !== null && _c !== void 0 ? _c : \"Authenticate\"\n            };\n            const signed = yield this.signMessage(Object.assign(Object.assign({}, signRequest), options));\n            yield this.verifyMessageNEP0413(signRequest, signed);\n            return signed;\n        });\n    }\n    signMessage(options) {\n        var _a, _b, _c, _d, _e;\n        return __awaiter(this, void 0, void 0, function*() {\n            options.strategy = (_a = options.strategy) !== null && _a !== void 0 ? _a : this.defaultStrategy();\n            options.provider = (_b = options.provider) !== null && _b !== void 0 ? _b : this.defaultProvider;\n            (_c = options.onInitialized) === null || _c === void 0 ? void 0 : _c.call(options);\n            (_e = (_d = options.strategy) === null || _d === void 0 ? void 0 : _d.onInitialized) === null || _e === void 0 ? void 0 : _e.call(_d);\n            // Legacy format with receiver property, does not correspond to the current version of the standard\n            if (\"receiver\" in options) return yield this.legacySignMessage(options);\n            const data = yield options.provider(Object.assign(Object.assign({}, options), {\n                request: {\n                    type: \"sign\",\n                    message: options.message,\n                    recipient: options.recipient,\n                    nonce: Array.from(options.nonce),\n                    network: this.networkId\n                }\n            }));\n            if ((data === null || data === void 0 ? void 0 : data.payload) == null) throw Error(\"Signature not found\");\n            const { publicKey, signature, accountId } = JSON.parse(data.payload);\n            return {\n                publicKey,\n                signature,\n                accountId\n            };\n        });\n    }\n    legacySignMessage(_a) {\n        var _b;\n        var { message, receiver, nonce } = _a, delegate = __rest(_a, [\n            \"message\",\n            \"receiver\",\n            \"nonce\"\n        ]);\n        return __awaiter(this, void 0, void 0, function*() {\n            if (nonce == null) {\n                let nonceArray = new Uint8Array(32);\n                nonce = [\n                    ...crypto.getRandomValues(nonceArray)\n                ];\n            }\n            const data = yield (_b = delegate.provider) === null || _b === void 0 ? void 0 : _b.call(delegate, Object.assign(Object.assign({}, delegate), {\n                request: {\n                    type: \"sign\",\n                    message,\n                    receiver,\n                    nonce,\n                    network: this.networkId\n                }\n            }));\n            if ((data === null || data === void 0 ? void 0 : data.payload) == null) {\n                throw Error(\"Signature not found\");\n            }\n            try {\n                const { publicKey, signature, accountId } = JSON.parse(data.payload);\n                const sign = new Uint8Array(Buffer.from(signature, \"base64\"));\n                const json = JSON.stringify({\n                    message,\n                    receiver,\n                    nonce\n                });\n                const msg = new Uint8Array(js_sha256_1.sha256.digest(`NEP0413:` + json));\n                const isVerify = key_pair_1.PublicKey.from(publicKey).verify(msg, sign);\n                if (isVerify === false) throw Error();\n                const account = yield this.account(accountId);\n                const keys = yield account.getAccessKeys();\n                const pb = publicKey.toString();\n                const isValid = keys.some((k)=>{\n                    if (k.public_key !== pb) return false;\n                    if (k.access_key.permission !== \"FullAccess\") return false;\n                    return true;\n                });\n                if (isValid === false) throw Error();\n                return {\n                    signature: new Uint8Array(Buffer.from(signature, \"base64\")),\n                    publicKey: key_pair_1.PublicKey.from(publicKey),\n                    message: `NEP0413:` + json,\n                    receiver,\n                    accountId,\n                    nonce\n                };\n            } catch (_c) {\n                throw Error(\"Signature not correct\");\n            }\n        });\n    }\n    signAndSendTransactions(_a) {\n        var _b, _c, _d, _e, _f, _g, _h, _j;\n        var { transactions } = _a, delegate = __rest(_a, [\n            \"transactions\"\n        ]);\n        return __awaiter(this, void 0, void 0, function*() {\n            delegate.strategy = (_b = delegate.strategy) !== null && _b !== void 0 ? _b : this.defaultStrategy();\n            delegate.provider = (_c = delegate.provider) !== null && _c !== void 0 ? _c : this.defaultProvider;\n            (_d = delegate.onInitialized) === null || _d === void 0 ? void 0 : _d.call(delegate);\n            (_f = (_e = delegate.strategy) === null || _e === void 0 ? void 0 : _e.onInitialized) === null || _f === void 0 ? void 0 : _f.call(_e);\n            let results = [];\n            try {\n                for (const call of transactions){\n                    const r = yield this.silentSignAndSendTransaction(call);\n                    results.push(r);\n                }\n                const payload = results.map((result)=>result.transaction_outcome.id).join(\",\");\n                const success = {\n                    status: provider_1.HereProviderStatus.SUCCESS,\n                    payload\n                };\n                (_g = delegate.onSuccess) === null || _g === void 0 ? void 0 : _g.call(delegate, success);\n                (_j = (_h = delegate.strategy) === null || _h === void 0 ? void 0 : _h.onSuccess) === null || _j === void 0 ? void 0 : _j.call(_h, success);\n                return results;\n            } catch (e) {\n                try {\n                    // If silent sign return access denied or not enough balance we request mobile wallet\n                    // OR its just transaction error\n                    if (!(e instanceof AccessDenied) && (e === null || e === void 0 ? void 0 : e.type) !== \"NotEnoughAllowance\") {\n                        (0, utils_1.internalThrow)(e, delegate);\n                        throw e;\n                    }\n                    const uncompleted = transactions.slice(results.length);\n                    const data = yield delegate.provider(Object.assign(Object.assign({}, delegate), {\n                        request: {\n                            type: \"call\",\n                            transactions: uncompleted.map((trx)=>Object.assign(Object.assign({}, trx), {\n                                    actions: (0, utils_1.serializeActions)(trx.actions)\n                                })),\n                            network: this.networkId\n                        }\n                    }));\n                    if (data.payload == null || data.account_id == null) {\n                        throw Error(\"Transaction not found, but maybe executed\");\n                    }\n                    const promises = data.payload.split(\",\").map((id)=>this.rpc.txStatus(id, data.account_id));\n                    return yield Promise.all(promises);\n                } catch (error) {\n                    (0, utils_1.internalThrow)(error, delegate);\n                    throw error;\n                }\n            }\n        });\n    }\n}\nexports.HereWallet = HereWallet; //# sourceMappingURL=wallet.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@here-wallet/core/build/wallet.js\n");

/***/ })

};
;